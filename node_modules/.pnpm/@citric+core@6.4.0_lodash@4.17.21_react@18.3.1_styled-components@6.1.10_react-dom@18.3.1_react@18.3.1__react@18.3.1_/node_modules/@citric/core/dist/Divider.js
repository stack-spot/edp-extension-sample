import { extendStyle, overwriteStyle } from './component-style.js';
import { css, styled } from './styled.js';
import { defaultConfig } from './utils/config.js';
import { handleSxAliasProps } from './utils/sx-props.js';
import { getColor } from './utils/theme.js';
const dividerSize = {
    sm: '1px;',
    md: '2px;',
    lg: '4px;',
};
const verticalStyle = (size) => css `
  border-right-width: ${dividerSize[size]};
  width: 1px;
  height: 100%;
`;
const Divider = styled.hr.withConfig(defaultConfig) `
  margin: 0;
  border-width: 0;

  ${extendStyle('Divider')};

  border-color: ${({ theme, colorScheme = 'light' }) => getColor(theme, colorScheme)};
  border-style: solid;
  ${({ vertical, size = 'sm' }) => (vertical && verticalStyle(size))}

  border-top-width: ${({ size = 'sm', vertical }) => (!vertical && dividerSize[size])};

  ${handleSxAliasProps};
  ${overwriteStyle('Divider')};
`;
export default Divider;
//# sourceMappingURL=Divider.js.map