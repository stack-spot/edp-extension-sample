import { SxProperties } from './sx.js';
import { Theme } from './theme-types.js';
export type SxProp = SxProperties;
type Props = {
    theme: Theme;
    sx?: SxProp;
};
export declare function overwriteStyleFromTheme(componentName: string, props: Props): import("styled-components").CSSObject | undefined;
export declare function overwriteStyleFromProp(props: Props): import("styled-components").CSSObject | undefined;
export declare function overwriteStyle(componentName: string): (props: Props) => {
    [x: string]: string | number | import("styled-components").RuleSet<any> | import("styled-components").StyledObject<import("styled-components/dist/types").BaseObject> | import("styled-components").StyleFunction<import("styled-components/dist/types").BaseObject> | undefined;
    [x: number]: string | number | import("styled-components").RuleSet<any> | import("styled-components").StyledObject<import("styled-components/dist/types").BaseObject> | import("styled-components").StyleFunction<import("styled-components/dist/types").BaseObject> | undefined;
};
export declare function extendStyle(componentName: string): (props: Props) => import("styled-components").CSSObject | undefined;
export {};
//# sourceMappingURL=component-style.d.ts.map