import { extendStyle, overwriteStyle } from './component-style.js';
import { css, styled } from './styled.js';
import { defaultConfig } from './utils/config.js';
import { handleSxAliasProps } from './utils/sx-props.js';
import { getColor, getFontAppearance, getFontStyle, getFontWeight, getLetterSpacing, } from './utils/theme.js';
export const Text = styled.p.withConfig(defaultConfig).attrs(({ theme, as, appearance }) => ({
    as: as || getFontAppearance(theme, appearance).tag,
})) `
  margin: 0;
  font: ${({ theme, appearance }) => appearance && getFontStyle(theme, appearance)};
  text-transform: ${({ theme, appearance }) => appearance && getFontAppearance(theme, appearance).textTransform};
  font-weight: ${({ theme, weight }) => weight && getFontWeight(theme, weight)};
  text-align: ${(props) => props?.align};
  margin-bottom: ${(props) => props?.gutterBottom && '0.35rem'};
  color: ${({ theme, colorScheme }) => colorScheme && getColor(theme, colorScheme)};
  letter-spacing: ${({ theme, appearance }) => appearance && getLetterSpacing(theme, appearance)};

  ${(props) => props?.nowrapEllipsis &&
    css `
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    `}

  ${extendStyle('Text')};
  ${handleSxAliasProps};
  ${overwriteStyle('Text')};
`;
export default Text;
//# sourceMappingURL=Text.js.map