import { jsx as _jsx } from "react/jsx-runtime";
import Text from './Text.js';
import { extendStyle, overwriteStyle } from './component-style.js';
import forwardRefAs from './forward-ref-as.js';
import { css, styled } from './styled.js';
import { getSpacing } from './utils/theme.js';
const labelInlineStyle = css `
  display: inline-flex;

  & + & {
    margin-left: ${props => getSpacing(props.theme, 7)};
  }
`;
const labelBlockStyle = `
  display: flex;
`;
export const LabelStyle = styled(Text) `
  margin-bottom: ${({ theme }) => getSpacing(theme, 2)};
  align-items: center;
  vertical-align: top;

  ${(props) => props?.disabled &&
    css `
      opacity: 0.24;
      pointer-events: none;
    `};

  &[for] {
    cursor: pointer;
  }

  ${extendStyle('Label')};

  ${(props) => (props?.inline ? labelInlineStyle : labelBlockStyle)}

  ${overwriteStyle('Label')};
`;
const Label = forwardRefAs(function Label({ children, as = 'label', ...props }, ref) {
    return (_jsx(LabelStyle, { ...props, ref: ref, as: as, children: children }));
});
export default Label;
//# sourceMappingURL=Label.js.map