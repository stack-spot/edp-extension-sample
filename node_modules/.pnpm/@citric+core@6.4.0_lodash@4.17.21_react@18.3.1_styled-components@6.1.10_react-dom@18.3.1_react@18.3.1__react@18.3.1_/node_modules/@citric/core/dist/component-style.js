import { get } from 'lodash';
import { merge } from 'ts-deepmerge';
import { sx } from './sx.js';
function styleFromTheme(props, themePath) {
    const style = get(props.theme, themePath);
    if (!style) {
        return undefined;
    }
    return typeof style === 'function' ? sx(props.theme, style(props)) : sx(props.theme, style);
}
export function overwriteStyleFromTheme(componentName, props) {
    return styleFromTheme(props, `component.${componentName}.overwrite`);
}
export function overwriteStyleFromProp(props) {
    return props.sx ? sx(props.theme, props.sx) : undefined;
}
export function overwriteStyle(componentName) {
    return (props) => merge(overwriteStyleFromTheme(componentName, props) || {}, overwriteStyleFromProp(props) || {});
}
export function extendStyle(componentName) {
    return (props) => styleFromTheme(props, `component.${componentName}.base`);
}
//# sourceMappingURL=component-style.js.map