import { get } from 'lodash';
export function getColor(theme, name, defaultVariant) {
    if (!name) {
        return undefined;
    }
    const key = name.includes('.') ? name : `${name}.${defaultVariant || '500'}`;
    const colorScheme = get(theme, `colorScheme.${key}`);
    const palette = get(theme, `palette.${key}`);
    return colorScheme || palette || name;
}
export function getColorScheme(theme, name) {
    return theme.colorScheme[name];
}
export function getBreakpoint(theme, breakpoint) {
    return theme.breakpoint[breakpoint];
}
export function getContainerWidth(theme, width) {
    return theme.container.width[width];
}
export function getRadius(theme, radius) {
    return radius ? theme.radius[radius] : undefined;
}
export function getSpacing(theme, spacing) {
    return theme.spacing(spacing);
}
export function getFontWeight(theme, name) {
    return name ? theme.font.weight[name] : undefined;
}
export function getFontFamily(theme, name) {
    return name ? theme.font.family[name] : undefined;
}
export function getFontAppearance(theme, name = 'body1') {
    return theme.font?.appearance[name];
}
export function getLetterSpacing(theme, name = 'body1') {
    return getFontAppearance(theme, name).letterSpacing;
}
export function getFontStyle(theme, name) {
    const { weight, size, family, lineHeight } = getFontAppearance(theme, name);
    const fontWeight = theme.font.weight[weight];
    const fontFamily = theme.font.family[family];
    return `${fontWeight} ${size}/${lineHeight} ${fontFamily}`;
}
export function getIconSize(theme, name = 'sm') {
    return theme.icon[name];
}
export function getIconButtonSize(theme, name = 'sm') {
    return theme.iconButton[name];
}
//# sourceMappingURL=theme.js.map