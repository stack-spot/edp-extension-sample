import { ReactNode } from 'react';
import { SxProp } from './component-style.js';
import { AsProp } from './forward-ref-as.js';
import { OneOfColorSchemes } from './theme-types.js';
type OneOfButtonAppearances = 'contained' | 'outlined' | 'text';
type OneOfButtonSizes = 'lg' | 'md' | 'sm';
export interface ButtonProps {
    sx?: SxProp;
    as?: AsProp;
    children: ReactNode;
    colorScheme?: OneOfColorSchemes;
    disabled?: boolean;
    appearance?: OneOfButtonAppearances;
    block?: boolean;
    size?: OneOfButtonSizes;
}
declare const Button: <E extends import("react").ElementType = "button">(props: ButtonProps & import("./forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, keyof ButtonProps>, ref: any) => JSX.Element;
export default Button;
//# sourceMappingURL=Button.d.ts.map