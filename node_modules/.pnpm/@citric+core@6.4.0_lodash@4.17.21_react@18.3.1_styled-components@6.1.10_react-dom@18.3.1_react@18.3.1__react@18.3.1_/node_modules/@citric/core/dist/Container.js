import { extendStyle, overwriteStyle } from './component-style.js';
import { css, styled } from './styled.js';
import { defaultConfig } from './utils/config.js';
import { down } from './utils/media-queries.js';
import { getContainerWidth, getSpacing } from './utils/theme.js';
function getContainerMaxWidth(theme, value) {
    return css `calc(${getContainerWidth(theme, value)} + 1.5rem * 2 )`;
}
const getContainerWidthByBreakpoint = ({ theme }) => {
    const retorno = Object.keys(theme.container.width)
        .filter((key) => key === 'lg' || key === 'xl')
        .map((key) => css `
          ${down(key)} 
          {
            max-width: ${getContainerWidth(theme, key)};
          }
        `);
    return retorno;
};
const fixedStyle = (theme) => css `
  max-width: ${() => getContainerMaxWidth(theme, 'default')};

  ${getContainerWidthByBreakpoint({ theme })}
`;
const Container = styled.div.withConfig(defaultConfig) `
  box-sizing: border-box;
  margin: 0 auto;
  width: 100%;

  ${extendStyle('Container')};

  padding: ${({ theme }) => `0 ${getSpacing(theme, 7)}`};
  ${({ theme, fluid }) => (fluid ? undefined : fixedStyle(theme))};

  ${overwriteStyle('Container')};
`;
export default Container;
//# sourceMappingURL=Container.js.map