import { extendStyle, overwriteStyle } from './component-style.js';
import { styled } from './styled.js';
import { defaultConfig } from './utils/config.js';
import { getColor, getRadius } from './utils/theme.js';
const Radio = styled.input.withConfig(defaultConfig).attrs({ type: 'radio' }) `
  appearance: none;
  display: inline-flex;
  width: 1.25rem;
  height: 1.25rem;
  cursor: pointer;
  margin: 0;
  box-sizing: border-box;
  position: relative;

  &:disabled {
    opacity: 0.24;
    pointer-events: none;
  }

  ${extendStyle('Radio')};

  background-color: ${({ theme }) => getColor(theme, 'light.300')};
  border: 2px solid ${({ theme }) => getColor(theme, 'light.contrastText')};
  border-radius: ${({ theme }) => getRadius(theme, 'lg')};

  &:checked {
    background-color: ${({ theme }) => getColor(theme, 'light.300')};
    border-color: ${({ theme }) => getColor(theme, 'inverse.500')};
  }

  &:checked:after {
    display: inline-flex;
    width: 0.5rem;
    height: 0.5rem;
    top: 4px;
    left: 4px;
    position: absolute;
    background-color: ${({ theme }) => getColor(theme, 'light.contrastText')};
    border-radius: ${({ theme }) => getRadius(theme, 'lg')};
    content: '';
    visibility: visible;
  }

  ${overwriteStyle('Radio')};
`;
export default Radio;
//# sourceMappingURL=Radio.js.map