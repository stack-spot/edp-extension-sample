import { extendStyle, overwriteStyle, SxProp } from './component-style'
import { css, styled } from './styled'
import { OneOfColorSchemes, OneOfColorSchemesWithVariants } from './theme-types'
import { defaultConfig } from './utils/config'
import { handleSxAliasProps, SxAliasProps } from './utils/sx-props'
import { getColor } from './utils/theme'

type OneOfDividerSizes = 'sm' | 'md' | 'lg'
export interface Props extends SxAliasProps {
  sx?: SxProp,
  vertical?: boolean,
  colorScheme?: OneOfColorSchemes | OneOfColorSchemesWithVariants,
  size?: OneOfDividerSizes,
}

const dividerSize = {
  sm: '1px;',
  md: '2px;',
  lg: '4px;',
}

const verticalStyle = (size: OneOfDividerSizes) => css`
  border-right-width: ${dividerSize[size]};
  width: 1px;
  height: 100%;
`

const Divider = styled.hr.withConfig(defaultConfig) <Props>`
  margin: 0;
  border-width: 0;

  ${extendStyle('Divider')};

  border-color: ${({ theme, colorScheme = 'light' }) => getColor(theme, colorScheme)};
  border-style: solid;
  ${({ vertical, size = 'sm' }) => (vertical && verticalStyle(size))}

  border-top-width: ${({ size = 'sm', vertical }) => (!vertical && dividerSize[size])};

  ${handleSxAliasProps};
  ${overwriteStyle('Divider')};
`

export default Divider
