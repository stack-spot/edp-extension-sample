import { extendStyle, overwriteStyle, SxProp } from './component-style'
import { styled } from './styled'
import { defaultConfig } from './utils/config'
import { getColor, getRadius } from './utils/theme'

export interface Props {
  sx?: SxProp,
}

const Checkbox = styled.input.withConfig(defaultConfig).attrs({ type: 'checkbox' }) <Props>`
  appearance: none;
  position: relative;
  box-sizing: border-box;
  width: 1.25rem;
  height: 1.25rem;

 &:disabled {
    opacity: 0.24;
    pointer-events: none;
  }

  border-radius: ${({ theme }) => getRadius(theme, 'xxs')};
  border: 1px solid ${({ theme }) => getColor(theme, 'light.contrastText')};
  background-color: ${({ theme }) => getColor(theme, 'light.500')};
  cursor: pointer;

  &:checked {
    border-color: ${({ theme }) => getColor(theme, 'inverse.700')};
    background-color: ${({ theme }) => getColor(theme, 'inverse.500')};
  }

  &:checked:after {
    content: '';
    top: 0.18rem;
    left: 0.359rem;
    width: 0.236rem;
    height: 0.471rem;
    position: absolute;
    
    border-bottom: 2px solid ${({ theme }) => getColor(theme, 'inverse.contrastText')};
    border-right: 2px solid ${({ theme }) => getColor(theme, 'inverse.contrastText')};
    transform: rotate(45deg);
  }

  ${extendStyle('Checkbox')};
  ${overwriteStyle('Checkbox')};
`

export default Checkbox
