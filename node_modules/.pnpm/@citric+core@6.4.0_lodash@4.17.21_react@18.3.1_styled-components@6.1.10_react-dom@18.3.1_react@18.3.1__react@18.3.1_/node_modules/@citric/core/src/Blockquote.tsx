import { ReactNode } from 'react'
import { SxProp, extendStyle, overwriteStyle } from './component-style'
import { AsProp } from './forward-ref-as'
import { styled } from './styled'
import { OneOfColorSchemes, OneOfColorSchemesWithVariants, OneOfPalettes } from './theme-types'
import { defaultConfig } from './utils/config'
import { getColor, getRadius, getSpacing } from './utils/theme'

interface Props {
  children: ReactNode,
  as?: AsProp,
  sx?: SxProp,
}

export interface PropsColorScheme extends Props {
  colorScheme?: OneOfColorSchemes,
  palette?: never,
}

export interface PropsPalette extends Props {
  palette?: OneOfPalettes,
  colorScheme?: never,
}

type BlockquoteProps = PropsPalette | PropsColorScheme

const Blockquote = styled.blockquote.withConfig(defaultConfig) <BlockquoteProps>`
  display: flex;
  padding-left: ${({ theme }) => getSpacing(theme, 5)};
  margin: ${({ theme }) => getSpacing(theme, 5)};

  &:before  {
    content: '';
    border: 2px solid ${({ theme, colorScheme, palette }) => getColor(theme, colorScheme && `${String(colorScheme)}.400` as OneOfColorSchemesWithVariants || palette || 'primary.400')
};
    border-radius: ${({ theme }) => getRadius(theme, 'sm')};
    right: ${({ theme }) => getSpacing(theme, 5)};
    position: relative;
  }
  
  ${extendStyle('Blockquote')}
  ${overwriteStyle('Blockquote')}
`



export default Blockquote
