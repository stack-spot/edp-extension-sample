import { Property } from 'csstype'
import { extendStyle, overwriteStyle, SxProp } from './component-style'
import forwardRefAs, { AsProp } from './forward-ref-as'
import { styled } from './styled'
import Text, { Props as TextProps } from './Text'
import { getColor } from './utils/theme'

export interface LinkProps extends TextProps {
  sx?: SxProp,
  as?: AsProp,
  textDecoration?: Property.TextDecoration,
}

const LinkStyled = styled(Text) <LinkProps>`
  padding: 0;
  border: none;
  background-color: transparent;
  cursor: pointer;

  ${extendStyle('Link')};

  text-decoration: ${(props: LinkProps) => props?.textDecoration || 'underline'};
  color: ${({ theme, colorScheme }) =>
    getColor(theme, colorScheme ? colorScheme : 'light.contrastText')};

  ${overwriteStyle('Link')};
`

const Link = forwardRefAs<LinkProps, 'a'>(function Link({ as = 'a', ...props }, ref) {
  return <LinkStyled ref={ref} {...props} as={as} />
})

export default Link
