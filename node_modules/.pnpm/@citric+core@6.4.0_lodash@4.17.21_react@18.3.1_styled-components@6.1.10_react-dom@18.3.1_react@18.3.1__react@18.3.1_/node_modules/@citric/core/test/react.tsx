 
import { render as renderTesting } from '@testing-library/react'
import { ComponentType, ReactElement, ReactNode } from 'react'
import { ThemeProvider } from 'styled-components'
import defaultTheme from '../src/default-theme'

type DefaultTheme = typeof defaultTheme

interface Theme extends DefaultTheme {
  component?: { [key: string]: any },
}

interface Props {
  children: ReactNode,
  theme?: Theme,
}

const AllTheProviders = ({ children, theme = defaultTheme }: Props) =>
  <ThemeProvider theme={theme}>{children}</ThemeProvider>

export const render = (
  ui: ReactElement,
  options: { theme?: Theme } = {},
): ReturnType<typeof renderTesting> => {
  const Wrapper = (props: Props) => <AllTheProviders theme={options.theme} {...props} />
  return renderTesting(ui, {
    wrapper: Wrapper as ComponentType,
    ...options,
  })
}

export const buildThemeWithComponents = (name: string, type: string, value: unknown) => ({
  ...defaultTheme,
  component: {
    [name]: {
      [type]: value,
    },
  },
})
