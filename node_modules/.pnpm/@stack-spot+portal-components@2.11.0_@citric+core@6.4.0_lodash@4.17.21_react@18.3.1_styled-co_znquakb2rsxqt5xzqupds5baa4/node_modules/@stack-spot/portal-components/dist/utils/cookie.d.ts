/**
 * Setup the cookie utilities to use a another domain. By default, it's based on *.stackspot.com.
 * @param domainRegex the regex to identify the domain. Example: {@link DEFAULT_DOMAIN_REGEX}.
 */
export declare function setupCookies(domainRegex: RegExp): void;
/**
 * Retrieves the current domain used for cookies. To change the domain, use `setupCookies(domainRegex)`.
 * @returns the current cookie domain.
 */
export declare function getCookieDomain(): string;
/**
 * Get all cookies as an object where the keys are the cookie names and the values are the respective cookie values.
 * @returns a map of cookie name to cookie value.
 */
export declare function getCookies(): Record<string, string | undefined>;
/**
 * Sets the value of a cookie.
 * @param key the cookie name (identifier).
 * @param value the cookie value.
 * @param customAttributes Accepted values: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#attributes.
 */
export declare function setCookie(key: string, value: string, customAttributes?: Record<string, string>): void;
/**
 * Removes a cookie.
 * @param key the cookie name (identifier).
 */
export declare function removeCookie(key: string): void;
/**
 * Retrieves the value of a cookie given its key/name.
 * @param key the cookie name (identifier).
 * @returns the cookie value or undefined, if the cookie doesn't exist.
 */
export declare function getCookie(key: string): string | undefined;
//# sourceMappingURL=cookie.d.ts.map