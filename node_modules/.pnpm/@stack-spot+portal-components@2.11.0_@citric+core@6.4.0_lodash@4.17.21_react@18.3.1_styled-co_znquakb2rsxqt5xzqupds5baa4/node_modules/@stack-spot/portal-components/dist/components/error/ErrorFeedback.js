import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Button, LinkBox, Text } from '@citric/core';
import { listToClass, theme } from '@stack-spot/portal-theme';
import { useTranslate } from '@stack-spot/portal-translate';
import { useState } from 'react';
import { styled } from 'styled-components';
import { Forbidden } from '../../svg/Forbidden.js';
import { Logo } from '../../svg/Logo.js';
import { NotFound } from '../../svg/NotFound.js';
import { ServerError } from '../../svg/ServerError.js';
import { Unauthenticated } from '../../svg/Unauthenticated.js';
const imageStyle = {
    width: '200px',
    height: '200px',
};
const imageMap = {
    401: _jsx(Unauthenticated, { style: imageStyle }),
    403: _jsx(Forbidden, { style: imageStyle }),
    404: _jsx(NotFound, { style: imageStyle }),
};
const FeedbackBox = styled.div `
  background-color: ${theme.color.light[400]};
  padding: 24px;
  .content {
    display: flex;
    justify-content: center;
    align-items: center;
    &.row {
      flex-direction: row;
      gap: 40px;
    }
    &.column {
      flex-direction: column;
      .text-content {
        align-items: center;
      }
    }
    .text-content {
      display: flex;
      flex-direction: column;
      gap: 12px;
    }
    .buttons {
      display: flex;
      flex-direction: row;
      gap: '10px';
    }
    .details {
      background-color: ${theme.color.danger[500]};
      color: ${theme.color.danger.contrastText};
      padding: 12px;
      border-radius: 5px;
    }
  }
`;
/**
 * A box with an icon and an error message. This is used for giving error feedbacks to the user.
 *
 * If the application is in debug mode, a button is rendered to show the error message.
 *
 * @param options the error code, the error message and whether or not the application is in debug mode.
 */
export const ErrorFeedback = ({ code = 0, message, debug, title, body, image, action, description, help, direction = 'row', style, className }) => {
    const t = useTranslate(dictionary);
    const [showDetails, setShowDetails] = useState(false);
    const shouldShowButtons = !!(action || (debug && message));
    function renderBody() {
        return typeof body === 'string' ? _jsx(Text, { appearance: "body1", colorScheme: "inverse", className: "description", children: body }) : body;
    }
    return (_jsx(FeedbackBox, { style: style, className: className, children: _jsxs("div", { className: listToClass(['content', direction]), children: [_jsx("div", { className: "image", children: image ?? imageMap[code] ?? _jsx(ServerError, { style: imageStyle }) }), _jsxs("div", { className: "text-content", children: [_jsx(LinkBox, { href: "/", className: "logo", children: _jsx(Logo, { style: { width: '130px', height: '30px' } }) }), _jsxs(Text, { appearance: "h4", mt: 5, colorScheme: "inverse", className: "title", children: [(code && !title) ? `${code}. ` : '', _jsx(Text, { appearance: "h4", as: "span", colorScheme: "light.700", children: title ?? t[`${code}.title`] })] }), body ? renderBody() : (_jsxs(_Fragment, { children: [_jsx(Text, { appearance: "body1", mt: 5, colorScheme: "inverse", className: "description", children: description ?? t[`${code}.description`] }), _jsx(Text, { appearance: "body1", colorScheme: "light.700", className: "help", children: help ?? t[`${code}.help`] })] })), shouldShowButtons && (_jsxs("div", { className: "buttons", children: [action && (_jsx(Button, { colorScheme: "inverse", onClick: action.onClick, children: action.label })), debug && message && (_jsx(Button, { appearance: "outlined", colorScheme: "inverse", onClick: () => setShowDetails(v => !v), children: showDetails ? t.hideDetails : t.showDetails }))] })), showDetails && (_jsx("div", { className: "details", children: _jsx(Text, { appearance: "microtext1", children: message }) }))] })] }) }));
};
const dictionary = {
    en: {
        altLogo: 'Logo Stackspot',
        '0.title': 'Unknown client error',
        '0.description': 'An unknown error happened while trying to load the resource.',
        '0.help': 'Reload the page and, if it still doesn\'t work, report the error the Stackspot team.',
        '401.title': 'Not authorized',
        '401.description': 'There was a failure loading credentials for this page.',
        '401.help': 'Check if the URL is correct or clear your cache and cookies from your browser and try again.',
        '403.title': 'Private access',
        '403.description': 'The page you have tried to visit is private.',
        '403.help': 'Log in with another account or request access from the person who manages your organization.',
        '404.title': 'Resource not found',
        '404.description': 'This resource no longer exists.',
        '404.help': 'Please try again or request a new URL from the person who manages your organization.',
        '500.title': 'Server error',
        '500.description': "We have identified a problem with the server, but don't worry. We are already investigating what happened.",
        '500.help': 'Please try again after a few minutes.',
        showDetails: 'Show Details',
        hideDetails: 'Hide Details',
    },
    pt: {
        altLogo: 'Logo Stackspot',
        '0.title': 'Erro desconhecido (cliente)',
        '0.description': 'Um erro desconhecido aconteceu ao carregar o recurso',
        '0.help': 'Recarregue a página e, se ainda não funcionar, reporte o problema para o time da Stackspot.',
        '401.title': 'Não autorizado',
        '401.description': 'Houve uma falha no carregamento de credenciais dessa página.',
        '401.help': 'Verifique se a URL está correta ou limpe o cache e os cookies de seu navegador e tente novamente.',
        '403.title': 'Acesso privado',
        '403.description': '"A página que você tentou visualizar é particular."',
        '403.help': 'Solicite acesso com o administrador da sua organização.',
        '404.title': 'Recurso não encontrado',
        '404.description': 'Este recurso não existe mais.',
        '404.help': 'Tente novamente ou fale com o administrador da sua organização.',
        '500.title': 'Erro ao exibir o recurso',
        '500.description': 'Mas não se preocupe, já estamos investigando o que aconteceu.',
        '500.help': 'Tente novamente após alguns minutos.',
        showDetails: 'Ver Detalhes',
        hideDetails: 'Esconder Detalhes',
    },
};
//# sourceMappingURL=ErrorFeedback.js.map