/// <reference types="react" />
export interface ErrorDescription {
    /**
     * The HTTP Error code if this is a network error.
     */
    code?: number;
    /**
     * The error message. This is only visible if debug is true.
     */
    message?: string;
    /**
     * Whether or not the application is in debug mode.
     */
    debug?: boolean;
    /**
     * The title for this error. Overwrites anything preset by "code".
     */
    title?: string;
    /**
     * The error description. Overwrites anything preset by "code".
     */
    description?: string;
    /**
     * A help text to aid the user. Overwrites anything preset by "code".
     */
    help?: string;
    /**
     * A button so the user can take some action.
     */
    action?: {
        label: string;
        onClick: () => void;
    };
    /**
     * The content for this error. Overwrites anything preset by "code", "description", "help" or "button".
     */
    body?: React.ReactNode;
    /**
     * The image for the error. Overwrites anything preset by "code".
     */
    image?: React.ReactElement;
    /**
     * Whether to show the feedback horizontally (row) or vertically (column).
     *
     * @default 'row'
     */
    direction?: 'row' | 'column';
    style?: React.CSSProperties;
    className?: string;
}
/**
 * A box with an icon and an error message. This is used for giving error feedbacks to the user.
 *
 * If the application is in debug mode, a button is rendered to show the error message.
 *
 * @param options the error code, the error message and whether or not the application is in debug mode.
 */
export declare const ErrorFeedback: ({ code, message, debug, title, body, image, action, description, help, direction, style, className }: ErrorDescription) => import("react/jsx-runtime").JSX.Element;
//# sourceMappingURL=ErrorFeedback.d.ts.map