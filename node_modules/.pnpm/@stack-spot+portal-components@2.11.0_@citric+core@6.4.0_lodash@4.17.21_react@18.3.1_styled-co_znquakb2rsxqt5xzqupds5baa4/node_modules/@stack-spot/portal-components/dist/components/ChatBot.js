import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button, Flex, IconBox } from '@citric/core';
import { QuestionAnswer, Times } from '@citric/icons';
import { CHAT_BUTTON_ID, CHAT_BUTTON_WRAPPER_ID, getServiceNowLauncher, hideChatWindow, showChatWindow } from '../hooks/service-now.js';
const styles = {
    content: {
        position: 'fixed',
        bottom: '80px',
        right: '0',
        visibility: 'visible',
        '&.opened .times': {
            display: 'block',
        },
        '&.opened .question': {
            display: 'none',
        },
        '.times': {
            display: 'none',
        },
        '.question': {
            display: 'block',
        },
    },
    button: {
        position: 'fixed',
        right: '15px',
        width: '64px',
        height: '64px',
        borderRadius: '50%',
        border: 'none',
        opacity: '0',
        '&.show': {
            opacity: '1',
        },
        '&:hover, &:focus': {
            background: 'primary.500',
        },
    },
    icon: {
        position: 'absolute',
        top: '50%',
        left: '50%',
        transform: 'translate(-50%, -50%)',
    },
};
/**
 * A button for opening or closing the service-now chat window.
 *
 * This is a circular orange button with a chat icon if the chat window is closed or a close icon if the chat window is open.
 */
export const ChatBot = () => {
    const handleOpenChatBot = () => {
        const chatIframe = getServiceNowLauncher();
        if (chatIframe) {
            const isVisible = chatIframe.classList.contains('show');
            if (isVisible) {
                hideChatWindow();
            }
            else {
                showChatWindow();
            }
        }
    };
    return (_jsx(Flex, { id: CHAT_BUTTON_WRAPPER_ID, sx: styles.content, children: _jsx(Button, { onClick: handleOpenChatBot, id: CHAT_BUTTON_ID, sx: styles.button, children: _jsxs(IconBox, { colorIcon: "light.400", sx: styles.icon, size: "lg", children: [_jsx(Times, { className: "times" }), _jsx(QuestionAnswer, { className: "question" })] }) }) }));
};
//# sourceMappingURL=ChatBot.js.map