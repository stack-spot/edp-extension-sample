import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Box, IconBox, Text } from '@citric/core';
import { ChevronRight, Code, Folder } from '@citric/icons';
import { theme } from '@stack-spot/portal-theme';
import { useState } from 'react';
import { useAnchorTag } from '../../context/anchor.js';
import { More } from './More.js';
const styles = {
    FileTreeViewWrapper: {
        height: '100%',
        display: 'flex',
        flexDirection: 'column',
        margin: '16px',
    },
    AccordionItemWrapper: {
        width: '100%',
        'ul': {
            listStyleType: 'none',
            margin: 0,
            padding: 0,
            flexDirection: 'column',
            marginLeft: '20px',
            justifyContent: 'center',
        },
        'li': {
            display: 'flex',
            listStyleType: 'none',
            margin: '2px 0',
            padding: 0,
            flexDirection: 'row',
            alignItems: 'center',
            gap: '4px',
        },
        '.accordion-node-group': {
            justifyContent: 'space-between',
            width: '100%',
            '&:hover': {
                backgroundColor: `${theme.color.light[500]}`,
                borderRadius: '4px',
            },
            'a': {
                display: 'flex',
                alignItems: 'center',
                textDecoration: 'underline',
                'label': {
                    '&:hover': {
                        cursor: 'pointer',
                    },
                },
            },
        },
        '.accordion-node': {
            cursor: 'pointer',
            flexDirection: 'row',
            display: 'flex',
            gap: '4px',
            alignItems: 'center',
            background: 'transparent',
            color: 'inherit',
            border: 'none',
            '.icon': {
                transition: 'transform ease-in-out 0.3s',
            },
            '.open': {
                transform: 'rotate(90deg)',
            },
        },
        'actions': {
            display: 'flex',
            flexDirection: 'row',
            gap: '4px',
            alignItems: 'center',
        },
    },
};
export const FileTreeView = ({ fileTree }) => {
    const AccordionItem = ({ name, isFile, dirs, defaultOpened = false, menuOptions, itemLink }) => {
        const Link = useAnchorTag();
        const [opened, setOpened] = useState(defaultOpened);
        const onExpand = () => {
            setOpened(old => !old);
        };
        const FolderItem = () => (_jsxs("li", { className: "accordion-node-group", children: [_jsxs("button", { className: "accordion-node", onClick: onExpand, children: [_jsx(IconBox, { className: `icon ${opened ? 'open' : ''}`, children: _jsx(ChevronRight, {}) }), _jsx(IconBox, { children: _jsx(Folder, {}) }), _jsx(Text, { children: name !== '' ? name : '/' })] }), menuOptions &&
                    _jsx("div", { className: "actions", children: _jsx(More, { menu: menuOptions }) })] }));
        const FileItem = () => (_jsxs("li", { className: "accordion-node-group", children: [_jsxs(Link, { href: itemLink, children: [_jsx(IconBox, { children: _jsx(Code, {}) }), _jsx(Text, { as: "label", children: name })] }), menuOptions &&
                    _jsx("div", { className: "actions", children: _jsx(More, { menu: menuOptions }) })] }));
        return (_jsxs(Box, { sx: styles.AccordionItemWrapper, children: [isFile ? _jsx(FileItem, {}) : _jsx(FolderItem, {}), _jsx("ul", { className: "accordion-children", children: opened && !isFile && dirs && dirs.length > 0 && (_jsx(_Fragment, { children: dirs?.map((subDir, index) => (_jsx("li", { children: _jsx(AccordionItem, { ...subDir }) }, index))) })) })] }));
    };
    return (_jsx(Box, { sx: styles.FileTreeViewWrapper, children: _jsx(AccordionItem, { ...fileTree, defaultOpened: true }) }));
};
//# sourceMappingURL=index.js.map