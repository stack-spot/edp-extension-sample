import { jsx as _jsx } from "react/jsx-runtime";
import { getColor } from '@citric/core/dist/utils/theme.js';
import { Tooltip } from '@citric/ui';
import styled from 'styled-components';
const statusToColor = {
    success: 'success.500',
    warning: 'warning.500',
    danger: 'danger.500',
    progress: 'secondary.500',
    unknown: 'light.contrastText',
};
/**
 * Get the color corresponding to the status.
 *
 * @param {Theme} theme - The theme object.
 * @param {Status} [status] - The status of the component.
 * @returns {string} The color corresponding to the status.
 */
function getColorFromStatus(theme, status) {
    const colorName = status && status in statusToColor ? statusToColor[status] : statusToColor.unknown;
    return getColor(theme, colorName);
}
/**
 * CircleWithTooltip component that displays a circle with an optional tooltip.
 *
 * @param props the component's props {@link WithTooltip}.
 */
const CircleWithTooltip = ({ tooltip, className, style }) => {
    const circle = _jsx("div", { style: style, className: className });
    return tooltip && tooltip.length ? _jsx(Tooltip, { text: tooltip, children: circle }) : circle;
};
/**
 * Renders a component that displays a colored circle based on the status.
 * It also supports an optional tooltip.
 *
 * @param props the component's props {@link Props}.
 */
export const StatusCircle = styled(CircleWithTooltip) `
  background-color: ${({ status, theme }) => getColorFromStatus(theme, status)};
  width: 12px;
  height: 12px;
  border-radius: 50%;
`;
//# sourceMappingURL=StatusCircle.js.map