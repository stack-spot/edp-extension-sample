import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/* eslint-disable comma-dangle */
import { Button, Flex, IconBox, Text } from '@citric/core';
import { ExclamationTriangle, TimesCircleFill } from '@citric/icons';
import { Alert } from '@citric/ui';
import { useState } from 'react';
/**
 * A styled and dismissible alert box for showing important warnings for the user.
 *
 * This renders a yellow box with an exclamation icon. The content passed as parameter is placed on the right of the icon.
 * @param props an object containing the content (children) to show inside the alert box.
 */
export const BannerWarning = ({ children }) => {
    const bannerKey = 'bannerClosed';
    const getCookie = (key) => document.cookie
        .split('; ')
        .find((row) => row.startsWith(`${key}=`))
        ?.split('=')[1];
    const setCookie = (key, value, domain = '.stackspot.com') => {
        document.cookie = `${key}=${value};path=/${location.host.endsWith(domain) ? `;domain=${domain}` : ''}`;
    };
    const [isVisible, setIsVisible] = useState(() => {
        if (typeof window !== 'undefined') {
            const isBannerValid = getCookie(bannerKey) !== 'expired';
            const isBannerClosed = getCookie(bannerKey) === 'true';
            return isBannerValid && !isBannerClosed;
        }
        return false;
    });
    const handleClose = () => {
        setCookie(bannerKey, 'true');
        setIsVisible(false);
    };
    if (!isVisible) {
        return null;
    }
    return (_jsx(Flex, { id: "banner-warning", sx: { zIndex: '1', w: 12, mb: 7 }, children: _jsxs(Alert, { colorScheme: "warning", sx: {
                height: '48px',
                position: 'relative',
                px: 3,
                py: 1
            }, children: [_jsxs(Flex, { sx: { display: 'flex', alignItems: 'center', flex: 1 }, children: [_jsx(IconBox, { size: "sm", colorIcon: "light.500", sx: {
                                display: ['flex', 'flex'],
                                mr: 2,
                                mb: 2
                            }, children: _jsx(ExclamationTriangle, {}) }), _jsx(Text, { sx: {
                                whiteSpace: 'pre-wrap'
                            }, appearance: "body2", colorScheme: "warning.contrastText", children: children })] }), _jsx(Button, { appearance: 'text', onClick: handleClose, sx: {
                        border: 'none',
                        outline: 'none',
                        ':hover': {
                            boxShadow: 'none'
                        },
                        ml: 2
                    }, children: _jsx(IconBox, { size: "lg", colorIcon: "light.500", sx: {
                            display: ['flex', 'flex']
                        }, children: _jsx(TimesCircleFill, {}) }) })] }) }));
};
//# sourceMappingURL=BannerWarning.js.map