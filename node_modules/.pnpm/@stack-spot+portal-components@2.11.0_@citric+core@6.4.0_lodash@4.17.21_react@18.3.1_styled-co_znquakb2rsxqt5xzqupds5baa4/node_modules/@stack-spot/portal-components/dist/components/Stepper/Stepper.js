import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Flex } from '@citric/core';
import { createContext, useState } from 'react';
import { styled } from 'styled-components';
import { StepperHeaders } from './headers.js';
const StepperContext = createContext({
    activeIndex: 0,
    stepsData: {},
    setStepData: () => { },
    getStepData: () => { },
    goToNextStep: () => { },
    goToPreviousStep: () => { },
});
const Wrapper = styled(Box) `
  width: 100%;
  gap: 1.5rem;
`;
const ContentWrapper = styled(Flex) `
  width: 100%;
`;
/**
 * Renders a component that provides an interface of steps for creating some content.
 *
 * The component wraps the Step component.
 */
const Stepper = ({ children }) => {
    const [activeIndex, setActiveIndex] = useState(0);
    const [stepsData, setStepsData] = useState({});
    const headers = children.map((child) => ({ title: child.props.title }));
    const setStepData = (name, data) => {
        setStepsData({ ...stepsData, ...{ [name]: data } });
    };
    const getStepData = (name) => stepsData[name];
    const setNextStep = () => {
        if (activeIndex < (children.length - 1)) {
            setActiveIndex(activeIndex + 1);
        }
    };
    const setPreviousStep = () => {
        if (activeIndex > 0) {
            setActiveIndex(activeIndex - 1);
        }
    };
    const contextValue = {
        activeIndex,
        stepsData,
        setStepData,
        getStepData,
        goToNextStep: setNextStep,
        goToPreviousStep: setPreviousStep,
    };
    return (_jsx(StepperContext.Provider, { value: contextValue, children: _jsxs(Wrapper, { children: [_jsx(StepperHeaders, { headers }), _jsx(ContentWrapper, { children: children[activeIndex] })] }) }));
};
export { StepperContext, Stepper };
//# sourceMappingURL=Stepper.js.map