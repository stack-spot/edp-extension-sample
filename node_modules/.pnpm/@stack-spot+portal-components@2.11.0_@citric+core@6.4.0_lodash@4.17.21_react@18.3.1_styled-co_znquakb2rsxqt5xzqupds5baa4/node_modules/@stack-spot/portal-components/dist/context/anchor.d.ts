/// <reference types="react" />
export type AnchorComponent = (props: React.AnchorHTMLAttributes<HTMLAnchorElement>) => React.ReactElement;
interface AnchorContext {
    /**
     * The component to render by a layout component a link is needed.
     * @default <a>
     */
    anchorTag?: AnchorComponent;
}
/**
 * Some components need to create HTML anchors (links) to other pages in the website. These links, sometimes, must to be managed by a
 * navigator for React. Since we don't want to couple this library with any specific navigator, you can provide your own component for
 * creating links, it must follow the same interface of the HTML's `a` tag.
 *
 * If this is not used, the tag `<a>` is used by default.
 * @param props the anchor component (anchorTag) and the content to render (children).
 */
export declare const AnchorProvider: ({ children, ...props }: Required<AnchorContext> & {
    children: React.ReactNode;
}) => import("react/jsx-runtime").JSX.Element;
/**
 * A React hook for retrieving the Link (anchor) component.
 * @returns the link component declared at {@link AnchorProvider} or a component that renders the tag <a> from HTML if no link component was
 * provided.
 */
export declare function useAnchorTag(): AnchorComponent;
export {};
//# sourceMappingURL=anchor.d.ts.map