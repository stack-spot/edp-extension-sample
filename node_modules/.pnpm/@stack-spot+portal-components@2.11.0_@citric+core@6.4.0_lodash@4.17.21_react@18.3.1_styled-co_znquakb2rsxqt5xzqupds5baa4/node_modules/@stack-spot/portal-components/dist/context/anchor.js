import { jsx as _jsx } from "react/jsx-runtime";
import { createContext, useContext } from 'react';
const context = createContext({});
const Anchor = props => _jsx("a", { ...props });
/**
 * Some components need to create HTML anchors (links) to other pages in the website. These links, sometimes, must to be managed by a
 * navigator for React. Since we don't want to couple this library with any specific navigator, you can provide your own component for
 * creating links, it must follow the same interface of the HTML's `a` tag.
 *
 * If this is not used, the tag `<a>` is used by default.
 * @param props the anchor component (anchorTag) and the content to render (children).
 */
export const AnchorProvider = ({ children, ...props }) => (_jsx(context.Provider, { value: props, children: children }));
/**
 * A React hook for retrieving the Link (anchor) component.
 * @returns the link component declared at {@link AnchorProvider} or a component that renders the tag <a> from HTML if no link component was
 * provided.
 */
export function useAnchorTag() {
    const { anchorTag } = useContext(context);
    return anchorTag ?? Anchor;
}
//# sourceMappingURL=anchor.js.map