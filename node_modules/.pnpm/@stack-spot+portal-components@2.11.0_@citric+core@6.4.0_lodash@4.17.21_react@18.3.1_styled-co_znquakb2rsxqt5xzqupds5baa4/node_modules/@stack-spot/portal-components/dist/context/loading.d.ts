import { ReactElement } from 'react';
interface LoadingContext {
    /**
     * The component to render by a layout component.
     * @default <LoadingCircular>
     */
    loading?: ReactElement;
}
/**
 * Some portals use a different loading style than what we have in citric.
 * You can provide your own loading component to use wherever you want within the application.
 *
 * @param position The position parameter is mandatory to be passed as absolute in the loading component that is being passed.
 *
 * If this is not used, the component `LoadingCircular` from citric is used by default.
 * @param props the loading component (useLoadingComponent) and the content to render (children).
 */
export declare const LoadingProvider: ({ children, ...props }: Required<LoadingContext> & {
    children: React.ReactNode;
}) => import("react/jsx-runtime").JSX.Element;
/**
 * A React hook for retrieving the Loading component.
 * @returns the loading component declared at `LoadingProvider`.
 */
export declare function useLoadingComponent(): ReactElement;
export {};
//# sourceMappingURL=loading.d.ts.map