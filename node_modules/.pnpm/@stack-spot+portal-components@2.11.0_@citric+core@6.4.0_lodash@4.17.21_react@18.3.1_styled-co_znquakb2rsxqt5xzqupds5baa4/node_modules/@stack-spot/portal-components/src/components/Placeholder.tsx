import { Box, Flex, Text } from '@citric/core'
import { AsProp } from '@citric/core/dist/forward-ref-as'
import { SxProperties } from '@citric/core/dist/sx'
import { Card, CardContent } from '@citric/ui'
import { GenericPlaceholder } from '../svg'

interface Props {
  title?: string,
  description?: string,
  img?: React.ReactElement,
  button?: React.ReactElement | null,
  show?: boolean,
  fullWidth?: boolean,
  sx?: SxProperties,
  sxCard?: SxProperties,
  style?: React.CSSProperties,
  className?: string,
}

interface PropsCallToAction extends Props {
  subDescription?: string,
  titleAs?: AsProp,
}

export const Placeholder = ({ title, description, button, img, fullWidth, show = true, sx, style, className }: Props) => {
  if (!show) {
    return null
  }

  return (
    <Card sx={{ ...(fullWidth ? { w: '100%' } : {}) }} style={style} className={className}>
      <CardContent as={Flex} py={27} justifyContent="center" flexDirection="column" alignItems="center" sx={sx}>
        {img ?? <GenericPlaceholder style={{ width: '184px', height: '104px' }} />}

        {title && <Text as="label" appearance="h4" mb="3" pt={5}>
          {title}
        </Text>}

        <Text mb="3" appearance="body2" colorScheme="light.700">
          {description}
        </Text>

        {button}
      </CardContent>
    </Card>
  )
}

export const PlaceholderCallToAction = ({
  title,
  description,
  subDescription,
  img,
  button,
  fullWidth,
  show = true,
  sx,
  sxCard,
  style,
  className,
  titleAs,
}: PropsCallToAction) => {
  if (!show) {
    return null
  }

  return (
    <Card sx={{ w: fullWidth ? '100%' : 'auto', bg: 'transparent', ...sxCard }} style={style} className={className}>
      <CardContent as={Flex} alignItems="center" justifyContent="center" py={15} sx={{ gap: '92px', ...sx }}>
        {img ?? <GenericPlaceholder style={{ width: '184px', height: '104px' }} />}

        <Box>
          {title && <Text as={titleAs} appearance="h4" mb="3" aria-live="assertive">
            {title}
          </Text>}

          <Text mb="3" appearance="body2" colorScheme="light.700">
            {description}
          </Text>

          <Text mb="3" appearance="body2" colorScheme="light.700">
            {subDescription}
          </Text>

          {button}
        </Box>
      </CardContent>
    </Card>
  )
}
