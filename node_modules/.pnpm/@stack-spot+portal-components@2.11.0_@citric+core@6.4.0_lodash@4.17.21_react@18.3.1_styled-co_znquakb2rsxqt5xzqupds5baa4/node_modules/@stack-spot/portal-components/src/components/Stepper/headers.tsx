import { Box, Flex, Text } from '@citric/core'
import { theme } from '@stack-spot/portal-theme'
import { FC, useContext } from 'react'
import { styled } from 'styled-components'
import { StepperContext } from './Stepper'

const StyledStepHeader = styled(Box)`
  flex: 1;
  border-top: 0.25rem solid ${theme.color.light[600]};
  padding-top: 1rem;

  &.active {
    border-color: ${theme.color.primary[500]};
  }

  &.finished {
    flex: unset;
    width: 4.5rem;
    border-color: ${theme.color.success[500]};
  }
`

const StyledStepHeaderText = styled(Text)`
  color: ${theme.color.light.contrastText};
  width: 100%;
  height: 1.5rem;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
`

interface StepperHeader {
  /**
   * Title that is passed to the step component is used here.
   */
  title: string,
}

export interface StepperHeadersProps {
  headers: StepperHeader[],
}

/**
 * Renders a component that represents the visual part of a step within the stepper component. 
 * The initial color of the step is primary.500 and when completed it is changed to the success.500 color.
 * 
 * The component stepper wraps this component.
 */

export const StepperHeaders: FC<StepperHeadersProps> = ({ headers }) => {
  const { activeIndex } = useContext(StepperContext)
  return (
    <Flex sx={{ gap: '1rem' }}>
      {headers.map((header, index) => (
        <StyledStepHeader 
          key={header.title}
          className={index < activeIndex ? 'finished' : (index === activeIndex ? 'active' : '')}
        >
          <StyledStepHeaderText>{header.title}</StyledStepHeaderText>
        </StyledStepHeader>
      ))}
    </Flex>
  )
}
