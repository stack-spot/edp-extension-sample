import { Box, IconBox, Input } from '@citric/core'
import { Filter, Times } from '@citric/icons'
import { FieldAddon, FieldGroup, IconButton } from '@citric/ui'
import { Dictionary, useTranslate } from '@stack-spot/portal-translate'
import { debounce } from 'lodash'
import { useCallback, useState } from 'react'

export const SearchInput = ({
  searchText,
  defaultValue,
  disabled = false,
  onChange,
  style,
  className,
}: {
  searchText: string,
  defaultValue?: string,
  disabled?: boolean,
  onChange: (value?: string) => void,
  style?: React.CSSProperties,
  className?: string,
}) => {
  const [value, setValue] = useState(defaultValue)
  const runOnChange = useCallback(debounce(onChange, 800), [onChange])
  const t = useTranslate(dictionary)

  return (
    <Box sx={{ position: 'relative' }} style={style} className={className}>
      <FieldGroup>
        <FieldAddon>
          <IconBox size="xs" colorIcon="light.700">
            <Filter />
          </IconBox>
        </FieldAddon>
        <Input
          value={value}
          placeholder={searchText}
          onChange={(e) => {
            setValue(e.target.value)
            runOnChange(e.target.value)
          }}
          disabled={disabled}
          maxLength={255}
        />
      </FieldGroup>
      {!!value && (
        <IconButton
          sx={{ position: 'absolute', right: '20px', top: '50%', transform: 'translate(50%, -50%)' }}
          onClick={() => {
            setValue('')
            runOnChange('')
          }}
          aria-label={t.ariaClearField}
        >
          <Times />
        </IconButton>
      )}
    </Box>
  )
}

const dictionary = {
  en: {
    ariaClearField: 'Clear field',
  },
  pt: {
    ariaClearField: 'Limpar campo',
  },
} satisfies Dictionary
