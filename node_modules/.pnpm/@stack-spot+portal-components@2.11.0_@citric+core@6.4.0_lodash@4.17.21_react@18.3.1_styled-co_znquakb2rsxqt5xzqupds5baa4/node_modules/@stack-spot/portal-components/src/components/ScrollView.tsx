import { OneOfColorSchemesWithVariants, OneOfPalettesWithVariants } from '@citric/core'
import { getColor } from '@citric/core/dist/utils/theme'
import { styled } from 'styled-components'

type Color = OneOfColorSchemesWithVariants | OneOfPalettesWithVariants

interface Props {
  /**
   * By default, the ScrollView scrolls in both directions
   */
  direction?: 'horizontal' | 'vertical' | 'both',
  /**
   * The color of the track in the scroll bar (background)
   * light.400 by default
   */
  trackColor?: Color,
  /**
   * The color of the thumb in the scroll bar (foreground)
   * light.700 by default
   */
  thumbColor?: Color,
  /**
   * `auto` to show the scroll-bar only when the content overflows. `scroll` to always show it.
   * `auto` by default
   */
  scrollType?: 'auto' | 'scroll',
}

function getDirectionStyle({ direction = 'both', scrollType = 'auto' }: Props) {
  const x = direction === 'both' || direction === 'horizontal' ? `overflow-x: ${scrollType};` : ''
  const y = direction === 'both' || direction === 'vertical' ? `overflow-x: ${scrollType};` : ''
  return `${x}${y}`
}

/**
 * Renders a component that provides scrolling. 
 * 
 * @param options the props for rendering the component: {@link Props}. 
 */

export const ScrollView = styled.div<Props>`
  ${getDirectionStyle}
  &::-webkit-scrollbar {
    width: 4px;
    height: 4px;
  }
  &::-webkit-scrollbar-track {
    background: ${({ theme, trackColor = 'light.400' }) => getColor(theme, trackColor)};
    border-radius: 2px;
    left: 40px;
  }
  &::-webkit-scrollbar-thumb,
  &::-webkit-scrollbar-thumb:hover {
    background: ${({ theme, thumbColor = 'light.700' }) => getColor(theme, thumbColor)};
    border-radius: 2px;
  }
`
