/* eslint-disable comma-dangle */
import { Button, Flex, IconBox, Text } from '@citric/core'
import { ExclamationTriangle, TimesCircleFill } from '@citric/icons'
import { Alert } from '@citric/ui'
import { useState } from 'react'

/**
 * A styled and dismissible alert box for showing important warnings for the user.
 *
 * This renders a yellow box with an exclamation icon. The content passed as parameter is placed on the right of the icon.
 * @param props an object containing the content (children) to show inside the alert box.
 */
export const BannerWarning = ({ children }: { children: React.ReactNode }) => {
  const bannerKey = 'bannerClosed'

  const getCookie = (key: string): string | undefined =>
    document.cookie
      .split('; ')
      .find((row) => row.startsWith(`${key}=`))
      ?.split('=')[1]

  const setCookie = (key: string, value: string, domain = '.stackspot.com') => {
    document.cookie = `${key}=${value};path=/${
      location.host.endsWith(domain) ? `;domain=${domain}` : ''
    }`
  }

  const [isVisible, setIsVisible] = useState(() => {
    if (typeof window !== 'undefined') {
      const isBannerValid = getCookie(bannerKey) !== 'expired'
      const isBannerClosed = getCookie(bannerKey) === 'true'
      return isBannerValid && !isBannerClosed
    }
    return false
  })

  const handleClose = () => {
    setCookie(bannerKey, 'true')
    setIsVisible(false)
  }

  if (!isVisible) {
    return null
  }

  return (
    <Flex id="banner-warning" sx={{ zIndex: '1', w: 12, mb: 7 }}>
      <Alert
        colorScheme="warning"
        sx={{
          height: '48px',
          position: 'relative',
          px: 3,
          py: 1
        }}
      >
        <Flex sx={{ display: 'flex', alignItems: 'center', flex: 1 }}>
          <IconBox
            size="sm"
            colorIcon="light.500"
            sx={{
              display: ['flex', 'flex'],
              mr: 2,
              mb: 2
            }}
          >
            <ExclamationTriangle />
          </IconBox>

          <Text
            sx={{
              whiteSpace: 'pre-wrap'
            }}
            appearance="body2"
            colorScheme="warning.contrastText"
          >
            {children}
          </Text>
        </Flex>
        <Button
          appearance={'text'}
          onClick={handleClose}
          sx={{
            border: 'none',
            outline: 'none',
            ':hover': {
              boxShadow: 'none'
            },
            ml: 2
          }}
        >
          <IconBox
            size="lg"
            colorIcon="light.500"
            sx={{
              display: ['flex', 'flex']
            }}
          >
            <TimesCircleFill />
          </IconBox>
        </Button>
      </Alert>
    </Flex>
  )
}
