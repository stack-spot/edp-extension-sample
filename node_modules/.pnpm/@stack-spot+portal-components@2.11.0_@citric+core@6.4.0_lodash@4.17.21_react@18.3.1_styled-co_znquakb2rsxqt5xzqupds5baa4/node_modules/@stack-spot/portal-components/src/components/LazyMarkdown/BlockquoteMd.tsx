import { Blockquote, Box, Flex, IconBox, Text } from '@citric/core'
import { OneOfColorSchemes } from '@citric/core/dist/theme-types'
import * as icons from '@citric/icons'
import { Dictionary, useTranslate } from '@stack-spot/portal-translate'
import { createElement } from 'react'

type IconName = keyof typeof icons

/**
 * BlockquoteMd component that renders a styled blockquote with an icon and text based on the provided props.
 *
 * @param {Object} props - The props for the BlockquoteMd component.
 * @param {any} props.props - The properties passed to the component.
 * @returns {JSX.Element} The BlockquoteMd component.
 */
export const BlockquoteMd = ({ props }: { props: any }) => {
  const t = useTranslate(dictionary)
  const arrayNode = props.node
  const blockItem = arrayNode?.children[1]?.children[0]?.value
  const blockStyle = blockquoteAlertStyle(blockItem)

  if (blockStyle) {
    const childrenBlock = arrayNode?.children[3]?.children[1].children[0].value
    return (
      <Flex sx={{ borderRadius: 'sm', bg: 'light.500', my: 3 }}>
        <Blockquote colorScheme={blockStyle.color}>
          <Box>
            <Flex>
              <IconBox appearance="square" colorIcon={`${blockStyle.color}.400`} sx={{ mr: 4 }}>
                {createElement(icons[blockStyle.icon])}
              </IconBox>
              <Text sx={{ color: `${blockStyle.color}.400` }} weight="medium">
                {t[blockItem as keyof typeof t]}
              </Text>
            </Flex>
            <Box my={3}>
              <Text>{childrenBlock}</Text>
            </Box>
          </Box>
        </Blockquote>
      </Flex>
    )
  }

  return (
    <Flex sx={{ borderRadius: 'sm', bg: 'light.500', my: 3 }}>
      <Blockquote>
        <Text {...props} />
      </Blockquote>
    </Flex>
  )
}

/**
 * Get the style for the blockquote based on the block rule.
 *
 * @param {string} blockRule - The block rule to determine the style.
 * @returns {{ color: OneOfColorSchemes, icon: IconName }} The style object containing color and icon.
 */
function blockquoteAlertStyle(blockRule: string) {
  const style: Record<string, { color: OneOfColorSchemes, icon: IconName }> = {
    '[!NOTE]': {
      color: 'inverse',
      icon: 'Document',
    },
    '[!INFO]': {
      color: 'secondary',
      icon: 'InfoCircle',
    },
    '[!IMPORTANT]': {
      color: 'tertiary',
      icon: 'MobileComments',
    },
    '[!TIP]': {
      color: 'success',
      icon: 'Star',
    },
    '[!WARNING]': {
      color: 'warning',
      icon: 'ExclamationTriangle',
    },
    '[!DANGER]': {
      color: 'danger',
      icon: 'Bug',
    },
  }
  return style[blockRule]
}

const dictionary = {
  en: {
    '[!NOTE]': 'Note',
    '[!INFO]': 'Info',
    '[!IMPORTANT]': 'Important',
    '[!TIP]': 'Tip',
    '[!WARNING]xw': 'Warning',
    '[!DANGER]': 'Danger',
  },
  pt: {
    '[!NOTE]': 'Nota',
    '[!INFO]': 'Informação',
    '[!IMPORTANT]': 'Importante',
    '[!TIP]': 'Dica',
    '[!WARNING]': 'Atenção',
    '[!DANGER]': 'Risco',
  },
} satisfies Dictionary
