import { createContext, useContext } from 'react'
import { NotificationController } from './NotificationController'

export interface Props {
  children: React.ReactNode,
  controller: NotificationController,
}

const context = createContext<NotificationController | undefined>(undefined)

export const NotificationProvider = ({ children, controller }: Props) => (
  <context.Provider value={controller}>{children}</context.Provider>
)

export function useNotificationController() {
  const controller = useContext(context)
  if (!controller) {
    throw new Error(
      'A NotificationController was requested, but no NotificationController is available in the React Context. Please, be sure to wrap your component in a NotificationProvider.',
    )
  }
  return controller
}
