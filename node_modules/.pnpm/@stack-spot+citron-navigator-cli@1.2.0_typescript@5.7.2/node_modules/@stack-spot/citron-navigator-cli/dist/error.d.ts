export declare class ParseError extends Error {
}
export declare class InvalidYaml extends Error {
    constructor();
}
export declare class InvalidYamlKeyType extends ParseError {
    constructor(key: string);
}
export declare class InvalidSearchParamFormat extends ParseError {
    constructor(key: string, value: string);
}
export declare class InvalidModifier extends ParseError {
    constructor(modifier: string, parameterName: string);
}
export declare class InvalidSearchParamName extends ParseError {
    constructor(name: string);
}
export declare class InvalidParameterType extends ParseError {
    constructor(type: string, parameterName: string);
}
export declare class InvalidRouteParamName extends ParseError {
    constructor(name: string);
}
export declare class SearchParamClashWithRouteParamError extends ParseError {
    constructor(parameterName: string, routeKey: string);
}
export declare class SearchParamClashWithPropagatedParamError extends ParseError {
    constructor(parameterName: string, routeKey: string);
}
export declare class InvalidRouteLinkLevel extends ParseError {
    constructor();
}
export declare class InvalidPath extends ParseError {
    constructor(path: string);
}
export declare class InvalidRouteFormat extends ParseError {
    constructor(key: string);
}
export declare class DuplicatedRouteError extends ParseError {
    constructor(routeKey: string);
}
export declare class NoRootError extends ParseError {
    constructor();
}
//# sourceMappingURL=error.d.ts.map