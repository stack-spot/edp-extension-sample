import { fireEvent } from '@testing-library/react'
import 'jest-styled-components'
import { createRef } from 'react'
import Rating from '../src/Rating'
import { buildThemeWithComponents, render } from './react'

test('should render a Rating component', () => {
  const setState = jest.fn()
  const { container } = render(<Rating onChange={setState} />)

  expect(container.firstChild).toMatchInlineSnapshot(`
.c0 {
  all: unset;
  display: inline-flex;
}

.c1 {
  all: unset;
}

.c1 :hover {
  cursor: pointer;
}

.c2 {
  fill: #BCBCCF;
}

<ul
  class="c0"
  role="listbox"
  tabindex="0"
>
  <li
    aria-checked="false"
    aria-label="1"
    class="c1"
    role="option"
    tabindex="-1"
  >
    <svg
      class="c2"
      height="16"
      viewBox="0 0 512 512"
      width="16"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clip-rule="evenodd"
        d="M226.885 21.0324C231.432 8.96413 242.98 1.00002 255.85 1.00002C268.719 1.00002 280.268 8.96417 284.814 21.0324C284.863 21.1612 284.91 21.2906 284.956 21.4204L335.668 164.956L478.048 164.956C478.048 164.956 478.049 164.956 478.049 164.956C490.986 164.956 502.581 173.002 507.079 185.16C511.579 197.325 508.006 210.992 498.152 219.404C498.075 219.471 497.997 219.536 497.918 219.601L377.676 319.119L428.087 470.296L428.091 470.306C432.349 483.099 427.824 497.158 416.935 505.078C406.055 512.992 391.305 512.972 380.445 505.029L380.435 505.021L255.825 413.75L131.152 505.024C131.126 505.043 131.1 505.062 131.075 505.08C131.046 505.101 131.016 505.122 130.987 505.143C120.124 512.928 105.488 512.863 94.6944 504.982C83.8929 497.095 79.3742 483.153 83.5273 470.421C83.5409 470.379 83.5546 470.338 83.5684 470.296L133.979 319.121L13.7168 219.602C13.6379 219.537 13.5596 219.471 13.4818 219.404C3.62783 210.992 0.0546401 197.325 4.55498 185.16C9.05299 173.002 20.6476 164.956 33.5843 164.956C33.5848 164.956 33.5854 164.956 33.5859 164.956L175.992 164.956L226.745 21.4157C226.791 21.2875 226.837 21.1597 226.885 21.0324ZM255.846 59.1039L302.664 191.618C305.488 199.612 313.045 204.956 321.522 204.956L452.877 204.956L341.617 297.041C335.255 302.306 332.784 310.941 335.396 318.775L381.14 455.956L267.646 372.826C260.611 367.674 251.049 367.673 244.013 372.823L130.533 455.903L176.26 318.775C178.872 310.94 176.4 302.305 170.037 297.04L58.7597 204.956L190.134 204.956C198.609 204.956 206.164 199.614 208.99 191.623L255.846 59.1039Z"
        fill-rule="evenodd"
      />
    </svg>
  </li>
  <li
    aria-checked="false"
    aria-label="2"
    class="c1"
    role="option"
    tabindex="-1"
  >
    <svg
      class="c2"
      height="16"
      viewBox="0 0 512 512"
      width="16"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clip-rule="evenodd"
        d="M226.885 21.0324C231.432 8.96413 242.98 1.00002 255.85 1.00002C268.719 1.00002 280.268 8.96417 284.814 21.0324C284.863 21.1612 284.91 21.2906 284.956 21.4204L335.668 164.956L478.048 164.956C478.048 164.956 478.049 164.956 478.049 164.956C490.986 164.956 502.581 173.002 507.079 185.16C511.579 197.325 508.006 210.992 498.152 219.404C498.075 219.471 497.997 219.536 497.918 219.601L377.676 319.119L428.087 470.296L428.091 470.306C432.349 483.099 427.824 497.158 416.935 505.078C406.055 512.992 391.305 512.972 380.445 505.029L380.435 505.021L255.825 413.75L131.152 505.024C131.126 505.043 131.1 505.062 131.075 505.08C131.046 505.101 131.016 505.122 130.987 505.143C120.124 512.928 105.488 512.863 94.6944 504.982C83.8929 497.095 79.3742 483.153 83.5273 470.421C83.5409 470.379 83.5546 470.338 83.5684 470.296L133.979 319.121L13.7168 219.602C13.6379 219.537 13.5596 219.471 13.4818 219.404C3.62783 210.992 0.0546401 197.325 4.55498 185.16C9.05299 173.002 20.6476 164.956 33.5843 164.956C33.5848 164.956 33.5854 164.956 33.5859 164.956L175.992 164.956L226.745 21.4157C226.791 21.2875 226.837 21.1597 226.885 21.0324ZM255.846 59.1039L302.664 191.618C305.488 199.612 313.045 204.956 321.522 204.956L452.877 204.956L341.617 297.041C335.255 302.306 332.784 310.941 335.396 318.775L381.14 455.956L267.646 372.826C260.611 367.674 251.049 367.673 244.013 372.823L130.533 455.903L176.26 318.775C178.872 310.94 176.4 302.305 170.037 297.04L58.7597 204.956L190.134 204.956C198.609 204.956 206.164 199.614 208.99 191.623L255.846 59.1039Z"
        fill-rule="evenodd"
      />
    </svg>
  </li>
  <li
    aria-checked="false"
    aria-label="3"
    class="c1"
    role="option"
    tabindex="-1"
  >
    <svg
      class="c2"
      height="16"
      viewBox="0 0 512 512"
      width="16"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clip-rule="evenodd"
        d="M226.885 21.0324C231.432 8.96413 242.98 1.00002 255.85 1.00002C268.719 1.00002 280.268 8.96417 284.814 21.0324C284.863 21.1612 284.91 21.2906 284.956 21.4204L335.668 164.956L478.048 164.956C478.048 164.956 478.049 164.956 478.049 164.956C490.986 164.956 502.581 173.002 507.079 185.16C511.579 197.325 508.006 210.992 498.152 219.404C498.075 219.471 497.997 219.536 497.918 219.601L377.676 319.119L428.087 470.296L428.091 470.306C432.349 483.099 427.824 497.158 416.935 505.078C406.055 512.992 391.305 512.972 380.445 505.029L380.435 505.021L255.825 413.75L131.152 505.024C131.126 505.043 131.1 505.062 131.075 505.08C131.046 505.101 131.016 505.122 130.987 505.143C120.124 512.928 105.488 512.863 94.6944 504.982C83.8929 497.095 79.3742 483.153 83.5273 470.421C83.5409 470.379 83.5546 470.338 83.5684 470.296L133.979 319.121L13.7168 219.602C13.6379 219.537 13.5596 219.471 13.4818 219.404C3.62783 210.992 0.0546401 197.325 4.55498 185.16C9.05299 173.002 20.6476 164.956 33.5843 164.956C33.5848 164.956 33.5854 164.956 33.5859 164.956L175.992 164.956L226.745 21.4157C226.791 21.2875 226.837 21.1597 226.885 21.0324ZM255.846 59.1039L302.664 191.618C305.488 199.612 313.045 204.956 321.522 204.956L452.877 204.956L341.617 297.041C335.255 302.306 332.784 310.941 335.396 318.775L381.14 455.956L267.646 372.826C260.611 367.674 251.049 367.673 244.013 372.823L130.533 455.903L176.26 318.775C178.872 310.94 176.4 302.305 170.037 297.04L58.7597 204.956L190.134 204.956C198.609 204.956 206.164 199.614 208.99 191.623L255.846 59.1039Z"
        fill-rule="evenodd"
      />
    </svg>
  </li>
  <li
    aria-checked="false"
    aria-label="4"
    class="c1"
    role="option"
    tabindex="-1"
  >
    <svg
      class="c2"
      height="16"
      viewBox="0 0 512 512"
      width="16"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clip-rule="evenodd"
        d="M226.885 21.0324C231.432 8.96413 242.98 1.00002 255.85 1.00002C268.719 1.00002 280.268 8.96417 284.814 21.0324C284.863 21.1612 284.91 21.2906 284.956 21.4204L335.668 164.956L478.048 164.956C478.048 164.956 478.049 164.956 478.049 164.956C490.986 164.956 502.581 173.002 507.079 185.16C511.579 197.325 508.006 210.992 498.152 219.404C498.075 219.471 497.997 219.536 497.918 219.601L377.676 319.119L428.087 470.296L428.091 470.306C432.349 483.099 427.824 497.158 416.935 505.078C406.055 512.992 391.305 512.972 380.445 505.029L380.435 505.021L255.825 413.75L131.152 505.024C131.126 505.043 131.1 505.062 131.075 505.08C131.046 505.101 131.016 505.122 130.987 505.143C120.124 512.928 105.488 512.863 94.6944 504.982C83.8929 497.095 79.3742 483.153 83.5273 470.421C83.5409 470.379 83.5546 470.338 83.5684 470.296L133.979 319.121L13.7168 219.602C13.6379 219.537 13.5596 219.471 13.4818 219.404C3.62783 210.992 0.0546401 197.325 4.55498 185.16C9.05299 173.002 20.6476 164.956 33.5843 164.956C33.5848 164.956 33.5854 164.956 33.5859 164.956L175.992 164.956L226.745 21.4157C226.791 21.2875 226.837 21.1597 226.885 21.0324ZM255.846 59.1039L302.664 191.618C305.488 199.612 313.045 204.956 321.522 204.956L452.877 204.956L341.617 297.041C335.255 302.306 332.784 310.941 335.396 318.775L381.14 455.956L267.646 372.826C260.611 367.674 251.049 367.673 244.013 372.823L130.533 455.903L176.26 318.775C178.872 310.94 176.4 302.305 170.037 297.04L58.7597 204.956L190.134 204.956C198.609 204.956 206.164 199.614 208.99 191.623L255.846 59.1039Z"
        fill-rule="evenodd"
      />
    </svg>
  </li>
  <li
    aria-checked="false"
    aria-label="5"
    class="c1"
    role="option"
    tabindex="-1"
  >
    <svg
      class="c2"
      height="16"
      viewBox="0 0 512 512"
      width="16"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        clip-rule="evenodd"
        d="M226.885 21.0324C231.432 8.96413 242.98 1.00002 255.85 1.00002C268.719 1.00002 280.268 8.96417 284.814 21.0324C284.863 21.1612 284.91 21.2906 284.956 21.4204L335.668 164.956L478.048 164.956C478.048 164.956 478.049 164.956 478.049 164.956C490.986 164.956 502.581 173.002 507.079 185.16C511.579 197.325 508.006 210.992 498.152 219.404C498.075 219.471 497.997 219.536 497.918 219.601L377.676 319.119L428.087 470.296L428.091 470.306C432.349 483.099 427.824 497.158 416.935 505.078C406.055 512.992 391.305 512.972 380.445 505.029L380.435 505.021L255.825 413.75L131.152 505.024C131.126 505.043 131.1 505.062 131.075 505.08C131.046 505.101 131.016 505.122 130.987 505.143C120.124 512.928 105.488 512.863 94.6944 504.982C83.8929 497.095 79.3742 483.153 83.5273 470.421C83.5409 470.379 83.5546 470.338 83.5684 470.296L133.979 319.121L13.7168 219.602C13.6379 219.537 13.5596 219.471 13.4818 219.404C3.62783 210.992 0.0546401 197.325 4.55498 185.16C9.05299 173.002 20.6476 164.956 33.5843 164.956C33.5848 164.956 33.5854 164.956 33.5859 164.956L175.992 164.956L226.745 21.4157C226.791 21.2875 226.837 21.1597 226.885 21.0324ZM255.846 59.1039L302.664 191.618C305.488 199.612 313.045 204.956 321.522 204.956L452.877 204.956L341.617 297.041C335.255 302.306 332.784 310.941 335.396 318.775L381.14 455.956L267.646 372.826C260.611 367.674 251.049 367.673 244.013 372.823L130.533 455.903L176.26 318.775C178.872 310.94 176.4 302.305 170.037 297.04L58.7597 204.956L190.134 204.956C198.609 204.956 206.164 199.614 208.99 191.623L255.846 59.1039Z"
        fill-rule="evenodd"
      />
    </svg>
  </li>
</ul>
`)
})

test('should render a Rating spreading props in root element', () => {
  const { container } = render(<Rating id="foo" />)

  expect(container.firstChild).toHaveAttribute('id', 'foo')
})

test('should call the onchange', () => {
  const setState = jest.fn()
  const { getAllByRole } = render(<Rating id="foo" onChange={setState} />)

  fireEvent.click(getAllByRole('option')[2])

  expect(setState).toBeCalledTimes(1)
})

test('should render a Rating using ref', () => {
  const ref = createRef<HTMLUListElement>()
  const { container } = render(<Rating ref={ref} />)

  expect(ref.current).toBe(container.firstChild)
})

test('should render a Rating with quantity of choices define by property max', () => {
  const { container } = render(<Rating maxLength={3} />)

  expect(container.getElementsByTagName('li').length).toEqual(3)
})

test('should render a Rating with value defined', () => {
  const { getAllByRole } = render(<Rating initialValue={3} />)

  expect(getAllByRole('option')[2]).toHaveAttribute('aria-checked', 'true')
})

test('should render a Rating with diferent empty icon', () => {
  const emptyIcon = <p>not checked</p>
  const { getAllByRole } = render(<Rating initialValue={2} emptyIcon={emptyIcon} />)

  expect(getAllByRole('option')[3]).toContainHTML('<p>not checked</p>')
})

test('should render a Rating with diferent fully icon', () => {
  const fullyIcon = <p>checked</p>
  const { getAllByRole } = render(<Rating initialValue={2} fullyIcon={fullyIcon} />)

  expect(getAllByRole('option')[1]).toContainHTML('<p>checked</p>')
})

describe('Component Style', () => {
  it('extends style from theme', () => {
    const customTheme = buildThemeWithComponents('Rating', 'base', {
      padding: '100px',
    })

    const setState = jest.fn()
    const { container } = render(<Rating onChange={setState} />, {
      theme: customTheme,
    })

    expect(container.firstChild).toHaveStyleRule('padding', '100px')
  })

  it('overwrite style from theme', () => {
    const customTheme = buildThemeWithComponents('Rating', 'overwrite', {
      backgroundColor: 'aquamarine',
    })

    const setState = jest.fn()
    const { container } = render(<Rating onChange={setState} />, {
      theme: customTheme,
    })

    expect(container.firstChild).toHaveStyleRule('background-color', 'aquamarine')
  })

  it('overwrite style with sx prop', () => {
    const setState = jest.fn()
    const { container } = render(<Rating sx={{ color: 'aquamarine' }} onChange={setState} />)

    expect(container.firstChild).toHaveStyleRule('color', 'aquamarine')
  })
})

test('should check input on click', () => {
  const { getAllByRole } = render(<Rating />)
  const item = getAllByRole('option')[2]

  fireEvent.click(item)

  expect(item).toHaveAttribute('aria-checked', 'true')
})
