/// <reference types="react" />
import { SxProp } from '@citric/core/dist/component-style.js';
import { AsProp } from '@citric/core/dist/forward-ref-as.js';
import { OneOfColorSchemes } from '@citric/core/dist/theme-types.js';
type PositionProps = 'left' | 'right' | 'top' | 'bottom';
type CoordsProps = {
    x: number;
    y: number;
};
export interface TooltipProps {
    children: React.ReactNode;
    text: React.ReactNode;
    as?: AsProp;
    sx?: SxProp;
    position?: PositionProps;
    float?: boolean;
    nowrap?: boolean;
    width?: string;
    colorScheme?: OneOfColorSchemes;
    offset?: Partial<CoordsProps>;
    keyboardControls?: boolean;
    tabIndex?: 'none' | number;
}
declare const Tooltip: <E extends import("react").ElementType = "div">(props: TooltipProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, keyof TooltipProps>, ref: any) => JSX.Element;
export default Tooltip;
//# sourceMappingURL=Tooltip.d.ts.map