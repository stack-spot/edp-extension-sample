import React from 'react';
import { format, getYear } from 'date-fns';
type Locale = 'pt' | 'en';
interface UseDatepickerProps {
    ref: React.MutableRefObject<HTMLInputElement | null>;
    locale?: Locale;
    initialDate?: Date;
    formatDate?: string;
}
interface DateProps {
    day?: Date;
    month?: number;
    year?: number;
}
declare const useDatepicker: (props: UseDatepickerProps) => {
    nextMonth: () => void;
    previousMonth: () => void;
    nextYear: () => void;
    previousYear: () => void;
    resetDate: () => void;
    setNewDate: (date: Date) => void;
    setNewDay: (day: number) => void;
    setNewMonth: (month: number) => void;
    setNewYear: (year: number) => void;
    isCurrentDate: ({ day, month, year }: DateProps) => boolean;
    isSelected: ({ day, month, year }: DateProps) => boolean;
    isSameMonth: (day: Date) => boolean;
    getCalendar: () => Date[][];
    getNameDaysWeek: () => string[];
    getMonthsName: () => Array<{
        number: number;
        name: string;
        nameFull: string;
    }>;
    getYears: () => string[];
    selectedDate: Date;
    currentDate: Date;
    handleChangeTyping: (event: React.ChangeEvent<HTMLInputElement>) => void;
    handleLocale: () => globalThis.Locale;
    format: typeof format;
    getYear: typeof getYear;
};
export default useDatepicker;
//# sourceMappingURL=useDatepicker.d.ts.map