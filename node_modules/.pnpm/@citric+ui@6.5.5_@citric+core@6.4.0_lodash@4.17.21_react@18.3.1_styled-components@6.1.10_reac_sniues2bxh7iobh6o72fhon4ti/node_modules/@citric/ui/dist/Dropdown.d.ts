import { SxProp } from '@citric/core/dist/component-style.js';
import { AsProp } from '@citric/core/dist/forward-ref-as.js';
import React from 'react';
export interface DropdownProps {
    as?: AsProp;
    sx?: SxProp;
    visible?: boolean;
    visibleHeight?: string;
    onClose: () => void;
    ignoredRef?: React.MutableRefObject<unknown>;
    children?: React.ReactNode;
}
export interface DropdownItemProps {
    as?: AsProp;
    sx?: SxProp;
}
declare const Dropdown: <E extends React.ElementType = "ul">(props: DropdownProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, React.ComponentPropsWithRef<E>>, keyof DropdownProps>, ref: any) => JSX.Element;
declare const DropdownItem: <E extends React.ElementType = "li">(props: DropdownItemProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, React.ComponentPropsWithRef<E>>, keyof DropdownItemProps>, ref: any) => JSX.Element;
export { Dropdown, DropdownItem };
//# sourceMappingURL=Dropdown.d.ts.map