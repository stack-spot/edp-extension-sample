import { OneOfColorSchemes, OneOfIconSizes, OneOfPalettes } from '@citric/core';
import { SxProp } from '@citric/core/dist/component-style.js';
import { AsProp } from '@citric/core/dist/forward-ref-as.js';
import { OneOfIconAppearances } from '@citric/core/dist/theme-types.js';
import { SxAliasProps } from '@citric/core/dist/utils/sx-props.js';
import { ReactNode } from 'react';
export declare function withOpacity(colorVariable: string, opacity: number): string;
export interface IconButtonBase extends SxAliasProps {
    children: ReactNode;
    sx?: SxProp;
    as?: AsProp;
    size?: OneOfIconSizes;
}
export interface IconButtonDefaultProps extends IconButtonBase {
    color?: OneOfColorSchemes | OneOfPalettes;
    appearance?: 'text';
}
export interface IconButtonAppearance extends IconButtonBase {
    color?: OneOfColorSchemes | OneOfPalettes;
    appearance?: OneOfIconAppearances;
}
type IconButtonProps = IconButtonDefaultProps | IconButtonAppearance;
export declare const IconButton: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, IconButtonProps>> & string;
export default IconButton;
//# sourceMappingURL=IconButton.d.ts.map