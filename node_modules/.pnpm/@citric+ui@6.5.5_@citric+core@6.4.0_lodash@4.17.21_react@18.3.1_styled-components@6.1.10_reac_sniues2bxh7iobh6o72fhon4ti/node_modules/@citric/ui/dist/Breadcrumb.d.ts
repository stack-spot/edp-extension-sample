/// <reference types="react" />
import { SxProp } from '@citric/core/dist/component-style.js';
import { AsProp } from '@citric/core/dist/forward-ref-as.js';
import { OneOfColorSchemes } from '@citric/core/dist/theme-types.js';
export interface BreadcrumbProps {
    sx?: SxProp;
    children?: React.ReactNode;
}
export interface BreadcrumbItemProps {
    as?: AsProp;
    sx?: SxProp;
    children?: React.ReactNode;
}
export interface BreadcrumbIconProps {
    as?: AsProp;
    sx?: SxProp;
    children?: React.ReactNode;
}
export interface BreadcrumbLinkProps {
    as?: AsProp;
    sx?: SxProp;
    colorScheme?: OneOfColorSchemes;
    children?: React.ReactNode;
}
declare const BreadcrumbIcon: <E extends import("react").ElementType = "span">(props: BreadcrumbIconProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, keyof BreadcrumbIconProps>, ref: any) => JSX.Element;
declare const BreadcrumbLink: <E extends import("react").ElementType = "a">(props: BreadcrumbLinkProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, keyof BreadcrumbLinkProps>, ref: any) => JSX.Element;
declare const BreadcrumbItem: <E extends import("react").ElementType = "li">(props: BreadcrumbItemProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, keyof BreadcrumbItemProps>, ref: any) => JSX.Element;
declare const Breadcrumb: <E extends import("react").ElementType = "nav">(props: BreadcrumbProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, "as" | keyof BreadcrumbProps>, ref: any) => JSX.Element;
export { Breadcrumb, BreadcrumbIcon, BreadcrumbItem, BreadcrumbLink };
//# sourceMappingURL=Breadcrumb.d.ts.map