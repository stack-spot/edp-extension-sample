/// <reference types="react" />
export declare const FormHelper: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, "ref"> & {
    ref?: import("react").RefObject<HTMLParagraphElement> | ((instance: HTMLParagraphElement | null) => void) | null | undefined;
}>, import("@citric/core/dist/Text.js").TextProps>, keyof import("@citric/core/dist/sx.js").SxCssAlias | keyof import("@citric/core/dist/Text.js").Props> & import("@citric/core/dist/Text.js").Props & import("@citric/core/dist/utils/sx-props.js").SxAliasProps, never>> & string;
declare const FormItem: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    sx?: import("@citric/core/dist/sx.js").SxProperties | undefined;
}>> & string;
export default FormItem;
//# sourceMappingURL=FormItem.d.ts.map