import { SxProp } from '@citric/core/dist/component-style.js';
import { ReactElement, ReactNode } from 'react';
export interface TabProps {
    sx?: SxProp;
    activeIndex?: number;
    children: (ReactElement<TabItemProps> | null)[];
    onChange?: (index: number) => void;
}
export interface TabItemProps {
    sx?: SxProp;
    title?: ReactNode;
    disabled?: boolean;
    children?: ReactNode;
}
export declare const TabsItem: <E extends import("react").ElementType = "div">(props: TabItemProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, "as" | keyof TabItemProps>, ref: any) => JSX.Element;
export declare const Tabs: <E extends import("react").ElementType = "nav">(props: TabProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, "as" | keyof TabProps>, ref: any) => JSX.Element;
//# sourceMappingURL=Tabs.d.ts.map