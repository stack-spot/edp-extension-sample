import { extendStyle, overwriteStyle } from '@citric/core/dist/component-style.js';
import { css, keyframes, styled } from '@citric/core/dist/styled.js';
import { defaultConfig } from '@citric/core/dist/utils/config.js';
import { getColor } from '@citric/core/dist/utils/theme.js';
const getSkeletonLoading = (theme) => keyframes `
  from {
    background-color: ${getColor(theme, 'light')};
  }

  to {
    background-color: ${getColor(theme, 'light.400')};
  }
`;
const skeletonStyles = {
    circle: (width) => css `
    width: ${width || '3.125rem'};
    height: ${width || '3.125rem'};
    border-radius: 50%;
  `,
    square: (width, height) => css `
    width: ${width || '100%'};
    height: ${height || '2rem'};
  `,
};
function getSkeletonAppearance({ appearance = 'square', width, height }) {
    return skeletonStyles[appearance](width, height);
}
const Skeleton = styled.div.withConfig(defaultConfig) `
  ${extendStyle('Skeleton')};

  animation: ${({ theme }) => getSkeletonLoading(theme)} 1s linear infinite alternate;

  ${getSkeletonAppearance};
  ${overwriteStyle('Skeleton')};
`;
export default Skeleton;
//# sourceMappingURL=Skeleton.js.map