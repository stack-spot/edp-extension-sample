import { SxProp } from '@citric/core/dist/component-style.js';
import { AsProp } from '@citric/core/dist/forward-ref-as.js';
import { ReactNode } from 'react';
type LabelProps = (index?: number) => string;
export interface RatingProps {
    as?: AsProp;
    sx?: SxProp;
    fullyIcon?: ReactNode;
    emptyIcon?: ReactNode;
    initialValue?: number;
    maxLength?: number;
    onChange?: (value: number) => void;
    label?: LabelProps;
}
declare const Rating: <E extends import("react").ElementType = "ul">(props: RatingProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, keyof RatingProps>, ref: any) => JSX.Element;
export default Rating;
//# sourceMappingURL=Rating.d.ts.map