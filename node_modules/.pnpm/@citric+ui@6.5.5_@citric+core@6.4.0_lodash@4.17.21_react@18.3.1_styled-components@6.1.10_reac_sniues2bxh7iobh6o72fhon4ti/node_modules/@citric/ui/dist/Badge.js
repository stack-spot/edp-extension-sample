import { jsx as _jsx } from "react/jsx-runtime";
import { Flex } from '@citric/core';
import { extendStyle, overwriteStyle } from '@citric/core/dist/component-style.js';
import forwardRefAs from '@citric/core/dist/forward-ref-as.js';
import { styled } from '@citric/core/dist/styled.js';
import { defaultConfig } from '@citric/core/dist/utils/config.js';
import { getColor, getFontStyle, getRadius, getSpacing } from '@citric/core/dist/utils/theme.js';
const BadgeStyled = styled.div.withConfig(defaultConfig) `
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: 1.5rem;
  padding: 0 0.5rem;

  &:nth-of-type(1n + 1) {
    margin-right: ${({ theme }) => getSpacing(theme, 2)};
  }

  ${extendStyle('Badge')};

  font: ${({ theme }) => getFontStyle(theme, 'microtext1')};
  border-radius: ${({ theme, appearance }) => getRadius(theme, appearance === 'square' ? 'xs' : 'full')};
  background-color: ${({ theme, palette = 'indigo' }) => getColor(theme, `${palette}.800`)};
  color: ${({ theme, palette = 'indigo' }) => getColor(theme, `${palette}.50`)};

  ${overwriteStyle('Badge')};
`;
const Badge = forwardRefAs(function Badge(props, ref) {
    return (_jsx(BadgeStyled, { ...props, ref: ref, children: _jsx(Flex, { as: "span", alignItems: "center", flexWrap: "nowrap", children: props.children }) }));
});
export default Badge;
//# sourceMappingURL=Badge.js.map