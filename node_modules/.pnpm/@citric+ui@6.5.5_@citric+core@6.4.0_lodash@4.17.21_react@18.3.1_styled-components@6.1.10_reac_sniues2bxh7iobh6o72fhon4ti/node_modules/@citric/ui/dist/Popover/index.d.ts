import { SxProp } from '@citric/core/dist/component-style.js';
import { AsProp } from '@citric/core/dist/forward-ref-as.js';
import { OneOfColorSchemesWithVariants } from '@citric/core/dist/theme-types.js';
import { ReactNode } from 'react';
type PositionProps = 'left' | 'right' | 'top' | 'bottom';
export interface PopoverProps {
    defaultVisible?: boolean;
    onClose?: () => void;
    children: React.ReactNode;
    content: ReactNode;
    as?: AsProp;
    sx?: SxProp;
    position?: PositionProps;
    title?: string;
    nowrap?: boolean;
    width?: string;
    colorScheme?: OneOfColorSchemesWithVariants;
    autoHidden?: boolean;
    containerSx?: SxProp;
}
export declare const Popover: <E extends import("react").ElementType = "div">(props: PopoverProps & import("@citric/core/dist/forward-ref-as.js").OwnProps<E> & Omit<JSX.LibraryManagedAttributes<E, import("react").ComponentPropsWithRef<E>>, keyof PopoverProps>, ref: any) => JSX.Element;
export {};
//# sourceMappingURL=index.d.ts.map