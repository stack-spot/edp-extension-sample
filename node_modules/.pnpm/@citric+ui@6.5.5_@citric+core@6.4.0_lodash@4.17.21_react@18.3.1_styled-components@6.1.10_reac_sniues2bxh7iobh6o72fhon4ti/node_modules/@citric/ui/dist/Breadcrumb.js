import { jsx as _jsx } from "react/jsx-runtime";
import { Flex } from '@citric/core';
import { extendStyle, overwriteStyle } from '@citric/core/dist/component-style.js';
import forwardRefAs from '@citric/core/dist/forward-ref-as.js';
import { styled } from '@citric/core/dist/styled.js';
import { defaultConfig } from '@citric/core/dist/utils/config.js';
import { getColor, getFontStyle, getFontWeight } from '@citric/core/dist/utils/theme.js';
import { Slash } from '@citric/icons';
const BreadcrumbStyled = styled.nav.withConfig(defaultConfig) `
  ${extendStyle('Breadcrumb')};
  ${overwriteStyle('Breadcrumb')};
`;
const BreadcrumbItemStyled = styled.li.withConfig(defaultConfig) `
  display: inline-flex;
  align-items: center;
  text-decoration: none;

  ${extendStyle('BreadcrumbItem')};

  color: ${({ theme }) => getColor(theme, 'light.contrastText')};
  font: ${({ theme }) => getFontStyle(theme, 'breadcrumb')};
  opacity: 40%;

  &:last-of-type {
    color: ${({ theme }) => getColor(theme, 'light.contrastText')};
    opacity: 1;
  }

  &:first-of-type {
    font-weight: ${({ theme }) => getFontWeight(theme, 'medium')};
  }

  ${overwriteStyle('BreadcrumbItem')};
`;
const BreadcrumbLinkStyled = styled.a.withConfig(defaultConfig) `
  cursor: pointer;
  color: inherit;
  text-decoration: inherit;

  ${extendStyle('BreadcrumbLink')};

  &:hover {
    text-decoration: underline;
    color: ${({ theme }) => getColor(theme, 'light.contrastText')};
  }

  ${overwriteStyle('BreadcrumbLink')};
`;
const BreadcrumbIconStyled = styled.span.withConfig(defaultConfig).attrs(({ children = _jsx(Slash, {}) }) => ({
    children,
})) `
  margin: 0 0.375rem;
  display: inline-flex;

  ${extendStyle('BreadcrumbIcon')};

  > svg {
    fill: ${({ theme }) => getColor(theme, 'light.contrastText')};
    width: 0.9rem;
    height: 0.9rem;
  }

  ${overwriteStyle('BreadcrumbIcon')};
`;
const BreadcrumbIcon = forwardRefAs(({ as = 'span', children, ...props }, ref) => (_jsx(BreadcrumbIconStyled, { as: as, ref: ref, ...props, children: children })));
const BreadcrumbLink = forwardRefAs(({ as = 'a', children, ...props }, ref) => (_jsx(BreadcrumbLinkStyled, { as: as, ref: ref, ...props, children: children })));
const BreadcrumbItem = forwardRefAs(({ as = 'li', children, ...props }, ref) => (_jsx(BreadcrumbItemStyled, { as: as, ref: ref, ...props, children: children })));
const Breadcrumb = forwardRefAs(({ children, ...props }, ref) => (_jsx(BreadcrumbStyled, { ref: ref, ...props, children: _jsx(Flex, { as: "ul", sx: { m: '0', p: '0' }, children: children }) })));
export { Breadcrumb, BreadcrumbIcon, BreadcrumbItem, BreadcrumbLink };
//# sourceMappingURL=Breadcrumb.js.map