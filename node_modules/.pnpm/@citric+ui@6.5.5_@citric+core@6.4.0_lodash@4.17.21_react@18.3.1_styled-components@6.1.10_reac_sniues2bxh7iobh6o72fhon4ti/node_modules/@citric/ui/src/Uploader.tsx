import { extendStyle, overwriteStyle, SxProp } from '@citric/core/dist/component-style'
import forwardRefAs from '@citric/core/dist/forward-ref-as'
import { css, styled } from '@citric/core/dist/styled'
import { defaultConfig } from '@citric/core/dist/utils/config'
import { getColor, getRadius, getSpacing } from '@citric/core/dist/utils/theme'

export interface UploaderProps {
  sx?: SxProp,
  children: React.ReactNode,
  disabled?: boolean,
}

const UploaderStyled = styled.span.withConfig(defaultConfig) <UploaderProps>`
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  padding: ${({ theme }) => `${getSpacing(theme, 3)}`};
  box-sizing: border-box;
  cursor: pointer;
  background-color: ${({ theme }) => `${getColor(theme, 'inverse')}`};
  color: ${({ theme }) => `${getColor(theme, 'inverse.contrastText')}`};

  input {
    cursor: pointer;
    position: absolute;
    top: 0;
    opacity: 0;
    right: 0;
    left: 0;
    bottom: 0;
  }

  border: 0.063rem solid ${({ theme }) => getColor(theme, 'inverse')};
  border-radius: ${({ theme }) => getRadius(theme, 'xs')};

  ${extendStyle('Uploader')};

  ${(props: UploaderProps) =>
    props?.disabled &&
    css`
      opacity: 0.24;
      pointer-events: none;
    `}

  ${overwriteStyle('Uploader')};
`

const Uploader = forwardRefAs<UploaderProps, 'input'>(function Uploader(
  { children, sx, ...props },
  ref,
) {
  return (
    <UploaderStyled disabled={props.disabled} sx={sx}>
      <input type="file" ref={ref} {...props} />
      {children}
    </UploaderStyled>
  )
})

export default Uploader
