import { extendStyle, overwriteStyle } from '@citric/core/dist/component-style'
import forwardRefAs from '@citric/core/dist/forward-ref-as'
import { styled } from '@citric/core/dist/styled'
import ProgressCircular, { ProgressCircularProps } from './ProgressCircular'

export type LoadingCircularProps = Omit<ProgressCircularProps, 'children' | 'percentage'>

const StyledLoadingCircular = styled(ProgressCircular) <LoadingCircularProps>`
  animation: loopRotate 1.5s infinite;

  @keyframes loopRotate {
    0% {
      transform: rotate(-100deg);
      stroke-dashoffset: 80%;
    }
    50% {
      transform: rotate(40deg);
      stroke-dashoffset: 60%;
    }
    100% {
      transform: rotate(260deg);
      stroke-dashoffset: 80%;
    }
  }
  ${extendStyle('LoadingCircular')}
  ${overwriteStyle('LoadingCircular')}
`

const LoadingCircular = forwardRefAs<LoadingCircularProps, 'svg'>(function LoadingCircular(
  { ...props },
  ref,
) {
  return <StyledLoadingCircular ref={ref} {...props} />
})

export default LoadingCircular
