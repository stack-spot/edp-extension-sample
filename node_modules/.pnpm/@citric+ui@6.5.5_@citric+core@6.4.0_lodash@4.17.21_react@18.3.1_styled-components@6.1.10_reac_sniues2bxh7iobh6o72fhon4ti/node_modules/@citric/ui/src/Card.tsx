import { extendStyle, overwriteStyle, SxProp } from '@citric/core/dist/component-style'
import { AsProp } from '@citric/core/dist/forward-ref-as'
import { css } from '@citric/core/dist/styled'
import { defaultConfig } from '@citric/core/dist/utils/config'
import { getColor, getRadius, getSpacing } from '@citric/core/dist/utils/theme'
import { styled } from 'styled-components'

export interface Props {
  sx?: SxProp,
  as?: AsProp,
}

interface CardProps extends Props {
  clickable?: boolean,
}

const CardHeader = styled.div<Props>`
  ${extendStyle('CardHeader')};
  ${overwriteStyle('CardHeader')};
`
const CardContent = styled.div<Props>`
  ${extendStyle('CardContent')};
  ${overwriteStyle('CardContent')};
`
const CardFooter = styled.div<Props>`
  ${extendStyle('CardFooter')};
  ${overwriteStyle('CardFooter')};
`
const Card = styled.div.withConfig(defaultConfig) <CardProps>`
  display: block;
  box-sizing: border-box;
  text-decoration: none;
  color: inherit;
  

  ${({ clickable }) =>
    clickable &&
    css`
      &:hover {
        cursor: pointer;
        box-shadow: 0px 0px 0px 2px ${props => getColor(props.theme, 'light.600')};
      }
    `}

  ${extendStyle('Card')};

  padding: ${({ theme }) => getSpacing(theme, 5)};
  background-color: ${({ theme }) => getColor(theme, 'light.400')};
  border: 1px solid ${({ theme }) => getColor(theme, 'light')};
  border-radius: ${({ theme }) => getRadius(theme, 'xs')};
  
  ${overwriteStyle('Card')};
`
export { Card, CardContent, CardFooter, CardHeader }

