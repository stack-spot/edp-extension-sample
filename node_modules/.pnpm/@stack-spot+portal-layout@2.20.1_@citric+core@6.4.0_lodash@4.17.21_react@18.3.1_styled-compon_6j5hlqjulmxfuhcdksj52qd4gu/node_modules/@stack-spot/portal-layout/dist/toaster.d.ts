/// <reference types="react" />
import 'react-toastify/dist/ReactToastify.css';
import { ToasterAction } from './components/Toaster.js';
type ToastType = 'error' | 'success' | 'warning' | 'info';
interface BaseOptions {
    /**
     * An identifier for the toaster, if not provided, `Math.random()` will be used.
     *
     * The id can be used to programmatically control the toaster.
     */
    id?: number | string;
    /**
     * The message to show.
     * Can be either a string or a React element.
     */
    message: React.ReactNode;
    /**
     * Level/severity of this message.
     * @default 'info'
     */
    type?: ToastType;
    /**
     * Seconds until auto-close or false to not auto-close.
     * @default 3s for success toast and 10s for the others
     */
    autoClose?: number | false;
    /**
     * If true, `message` must be a React Element and none of the default toaster UI is rendered (title, icon and close button).
     * @default false
     */
    custom?: boolean;
    /**
     * Whether or not to close the toaster when the user clicks it.
     * @default false
     */
    closeOnClick?: boolean;
}
export interface DefaultToasterOptions extends BaseOptions {
    /**
     * The title of the toaster.
     */
    title?: string;
    /**
     * A function to call when the user clicks the toaster. By default, it closes the toaster.
     */
    onClick?: () => void;
    /**
     * A set of buttons (or links/anchors) to show after the message.
     */
    actions?: ToasterAction[];
    custom?: false;
}
export interface CustomToasterOptions extends BaseOptions {
    /**
     * The whole content to render inside the toaster.
     */
    message: React.ReactElement;
    custom: true;
    /**
     * A close button to render on the top right corner of the toaster. If not provided, a close button won't be rendered.
     */
    closeButton?: React.ReactElement;
}
export type ToasterOptions = DefaultToasterOptions | CustomToasterOptions | React.ReactNode;
export declare function showToaster(defaultToasterConfig: DefaultToasterOptions): number | string;
export declare function showToaster(customToasterConfig: CustomToasterOptions): number | string;
export declare function showToaster(message: React.ReactNode): number | string;
export declare function closeReactToaster(id: number | string): void;
export {};
//# sourceMappingURL=toaster.d.ts.map