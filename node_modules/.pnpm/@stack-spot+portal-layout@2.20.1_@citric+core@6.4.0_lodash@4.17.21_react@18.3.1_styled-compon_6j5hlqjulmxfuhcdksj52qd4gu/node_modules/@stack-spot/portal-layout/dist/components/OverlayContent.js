import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Flex, Text } from '@citric/core';
import { TimesMini } from '@citric/icons';
import { IconButton } from '@citric/ui';
import { listToClass, theme } from '@stack-spot/portal-theme';
import { styled } from 'styled-components';
import { useDictionary } from '../dictionary.js';
export const CLOSE_OVERLAY_ID = 'close-overlay';
const ContentBox = styled.section `
  display: flex;
  flex-direction: column;
  border-radius: 1rem;
  background-color: ${theme.color.light['400']};
  &.modal {
    padding: 32px;
  }
  &.panel {
    padding: 20px;
    display: flex;
    flex-direction: column;
    flex: 1;
  }
  header {
    display: flex;
    flex-direction: row;
    margin-bottom: 1.25rem;
  }
`;
/**
 * Renders a modal or right panel with title, subtitle, close button and content.
 * @param props the React props for the component {@link Props}.
 */
export const OverlayContent = ({ children, title, subtitle, className, style, onClose, type }) => {
    const t = useDictionary();
    return (_jsxs(ContentBox, { style: style, className: listToClass([className, type]), children: [_jsxs("header", { children: [_jsxs(Flex, { flexDirection: "column", flex: 1, children: [_jsx(Text, { as: "h2", appearance: type === 'modal' ? 'h3' : 'h4', children: title }), subtitle && _jsx(Text, { appearance: "body2", colorScheme: "light.700", children: subtitle })] }), _jsx(IconButton, { onClick: onClose, title: t.close, "aria-label": t.close, id: CLOSE_OVERLAY_ID, children: _jsx(TimesMini, {}) })] }), children] }));
};
//# sourceMappingURL=OverlayContent.js.map