import { jsx as _jsx } from "react/jsx-runtime";
import { AnimatedHeight } from '@stack-spot/portal-components/AnimatedHeight';
import { ErrorFeedback } from '@stack-spot/portal-components/error';
import { NotificationList, useNotificationController } from '@stack-spot/portal-components/Notifications';
import { ScrollView } from '@stack-spot/portal-components/ScrollView';
import { NotificationPanelHeader } from './NotificationPanelHeader.js';
import { NotificationPanelFooter } from './NotificationsPanelFooter.js';
import { StyledBackdrop } from './styled.js';
export const NotificationPanel = ({ filter, onFilter, loading, error, visible, onClose, ...props }) => {
    const controller = useNotificationController();
    return (_jsx(StyledBackdrop, { visible: visible, onClose: onClose, persistent: true, children: _jsx(AnimatedHeight, { className: "notification-panel", visible: visible, header: _jsx(NotificationPanelHeader, { filter: filter, onChangeFilter: onFilter, onClose: onClose }), footer: _jsx(NotificationPanelFooter, { onClose: onClose }), children: _jsx(ScrollView, { direction: "vertical", style: { maxHeight: 'calc(100vh - 300px)' }, children: error ? _jsx(ErrorFeedback, { code: error.code, direction: "column" }) : _jsx(NotificationList, { ...props, compact: true, loading: loading, onCommit: id => controller.markAsCommitted(id), onClickAction: (id) => {
                        onClose();
                        controller.config.onClickAction?.(id);
                    } }) }) }) }));
};
//# sourceMappingURL=NotificationPanel.js.map