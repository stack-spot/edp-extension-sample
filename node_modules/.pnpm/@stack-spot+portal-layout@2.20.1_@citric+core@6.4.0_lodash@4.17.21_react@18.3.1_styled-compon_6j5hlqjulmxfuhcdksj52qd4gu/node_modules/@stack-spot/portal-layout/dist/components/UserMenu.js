import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Flex, IconBox, LinkBox, Text } from '@citric/core';
import { ChevronDown } from '@citric/icons';
import { Avatar } from '@citric/ui';
import { SelectionList } from '@stack-spot/portal-components/SelectionList';
import { theme } from '@stack-spot/portal-theme';
import { interpolate, useTranslate } from '@stack-spot/portal-translate';
import { useEffect, useState } from 'react';
import { styled } from 'styled-components';
import { userMenuManager } from './user-menu-manager.js';
const USER_MENU_ID = 'userMenu';
const UserMenuBox = styled.div `
  .user-menu-header {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 12px;
    border-bottom: 2px solid ${theme.color.light['600']};
  }

  .selection-list {
    position: absolute;
    top: var(--header-height);
    right: 20px;
    width: 266px;

    .selection-list-content {
      border: none;
      padding: 16px 16px 8px;
      background-color: ${theme.color.light['400']};
    }

    li {
      margin: 8px 0;
      & > a {
        border-radius: 6px;
        &:hover, &:focus {
          background: ${theme.color.light['500']};
        }
      }
    }
  }

  .username {
    margin: 5px 0 2px 0;
  }

  .chevron {
    transition: transform ease-out 0.3s;
  }
`;
const UserMenuHeader = ({ userName, email }) => (_jsxs("div", { className: "user-menu-header", children: [_jsx(Avatar, { size: "xs", children: userName }), _jsx(Text, { appearance: "body1", className: "username", children: userName }), email && _jsx(Text, { appearance: "microtext1", className: "email", colorScheme: "light.700", children: email })] }));
/**
 * Renders the user menu.
 * @param props the component's props {@link Props}.
 */
export const UserMenu = ({ userName, email, options }) => {
    const t = useTranslate(dictionary);
    const [visible, setVisible] = useState(false);
    useEffect(() => userMenuManager.subscribe(setVisible), []);
    return (_jsxs(UserMenuBox, { children: [_jsx(LinkBox, { as: "button", onClick: () => setVisible(v => !v), "aria-controls": USER_MENU_ID, "aria-expanded": visible, "aria-label": interpolate(t.accountMenu, [userName]), children: _jsxs(Flex, { alignItems: "center", children: [_jsx(Avatar, { size: "xs", "aria-label": interpolate(t.accountMenu, [userName]), children: userName }), _jsx(IconBox, { colorIcon: "inverse.500", className: "chevron", style: visible ? { transform: 'rotate(180deg)' } : undefined, children: _jsx(ChevronDown, {}) })] }) }), options?.length
                ? _jsx(SelectionList, { id: USER_MENU_ID, visible: visible, before: _jsx(UserMenuHeader, { userName: userName, email: email }), items: options, onHide: () => setVisible(false), maxHeight: "600px" })
                : null] }));
};
const dictionary = {
    en: {
        accountMenu: 'Profile menu of $0',
    },
    pt: {
        accountMenu: 'Menu do perfil $0',
    },
};
//# sourceMappingURL=UserMenu.js.map