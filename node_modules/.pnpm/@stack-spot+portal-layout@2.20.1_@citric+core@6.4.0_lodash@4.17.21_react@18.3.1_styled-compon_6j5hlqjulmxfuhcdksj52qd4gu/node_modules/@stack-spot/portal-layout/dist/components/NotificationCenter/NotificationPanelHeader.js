import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button, Flex, IconBox, Text } from '@citric/core';
import { TimesMini } from '@citric/icons';
import { IconButton } from '@citric/ui';
import { CLOSE_OVERLAY_ID } from '../OverlayContent.js';
import { useNotificationsDictionary } from './dictionary.js';
const FilterButton = ({ current, onChangeFilter, value }) => {
    const t = useNotificationsDictionary();
    const active = current === value;
    return (_jsx(Button, { appearance: "text", role: "button", "aria-label": t[`${value}.ariaLabel`], "aria-pressed": active, onClick: () => onChangeFilter(value), className: "filter-btn", children: _jsx(Flex, { flexDirection: "row", style: { gap: '8px' }, alignItems: "center", children: _jsx(Text, { colorScheme: "inverse", appearance: "microtext1", children: t[`${value}.label`] }) }) }));
};
export const NotificationPanelHeader = ({ filter, onChangeFilter, onClose }) => {
    const t = useNotificationsDictionary();
    return (_jsxs(Flex, { flexDirection: "column", children: [_jsxs(Flex, { justifyContent: "space-between", children: [_jsx(Text, { appearance: "h4", as: "h2", children: t.notifications }), _jsx(IconButton, { id: CLOSE_OVERLAY_ID, "aria-label": t.close, onClick: onClose, children: _jsx(IconBox, { size: "xs", children: _jsx(TimesMini, {}) }) })] }), _jsxs("ul", { className: "filter-list", children: [_jsx("li", { children: _jsx(FilterButton, { current: filter, onChangeFilter: onChangeFilter, value: "ALL" }) }), _jsx("li", { children: _jsx(FilterButton, { current: filter, onChangeFilter: onChangeFilter, value: "UNREAD" }) }), _jsx("li", { children: _jsx(FilterButton, { current: filter, onChangeFilter: onChangeFilter, value: "HIGH" }) }), _jsx("li", { children: _jsx(FilterButton, { current: filter, onChangeFilter: onChangeFilter, value: "MEDIUM" }) }), _jsx("li", { children: _jsx(FilterButton, { current: filter, onChangeFilter: onChangeFilter, value: "LOW" }) })] })] }));
};
//# sourceMappingURL=NotificationPanelHeader.js.map