import { ReactNode } from 'react';
import { ReactourStep } from 'reactour';
import { NavigationProps } from './StepNavigation.js';
/**
 * Tutorial: marks the tour step as finished. This sets a cookie, preventing the tour from showing again.
 * @param key the identifier for the step to mark as finished.
 */
export declare const finishTourStep: (key: string) => void;
/**
 * Tutorial: verifies if the React Tour step has not finished yet.
 *
 * A step has not finished if the array stored as a cookie doesn't include the string value of `step.selector`.
 * @param step the step config.
 * @returns true if the step has not yet been marked as finished. False otherwise.
 */
export declare const isNewTourStep: (step: ReactourStep) => boolean;
/**
 * Tutorial: verifies if the key passed as parameter refers to a React Tour step that has already finished.
 *
 * The key refers to a finished step if the array stored as a cookie includes it.
 * If the cookie is set to 'disabled', then the step will be considered finished.Particularly useful in scenarios like e2e tests.
 * @param key the step's identifier to check.
 * @returns true if the key refers to a finished step. False otherwise.
 */
export declare const hasFinishedTourStep: (key: string) => boolean;
export interface StackspotTourStep extends ReactourStep {
    /**
     * The step's title.
     */
    title: string;
    /**
     * The unique identifier for the step (key).
     */
    selector: string;
    /**
     * The step's content.
     */
    content: ReactNode;
    /**
     * A set of properties for customizing the next and previous buttons.
     */
    customNavigation?: NavigationProps;
}
/**
 * Tutorial: utility for building a React Tour step. This already includes some default configuration for tours in Stackspot.
 * @param options the options for building the step: {@link StackspotTourStep}.
 * @returns the React Tour step.
 */
export declare const tourStepBuilder: ({ selector, position, title, content, style, customNavigation, ...rest }: StackspotTourStep) => ReactourStep;
//# sourceMappingURL=utils.d.ts.map