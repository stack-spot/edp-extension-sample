class UserMenuManager {
    constructor() {
        Object.defineProperty(this, "visible", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        Object.defineProperty(this, "observers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
    changeVisible(isVisible) {
        this.visible = isVisible;
        this.notify();
    }
    isOpen() {
        return this.visible;
    }
    subscribe(updateFn) {
        this.observers.push(updateFn);
        this.notify();
        return () => this.pullListener(updateFn);
    }
    pullListener(updateFn) {
        this.observers = this.observers.filter((obs) => obs !== updateFn);
    }
    notify() {
        this.observers.forEach((updateFn) => updateFn(this.visible));
    }
}
export const userMenuManager = new UserMenuManager();
//# sourceMappingURL=user-menu-manager.js.map