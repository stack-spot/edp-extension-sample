import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { Button, Flex, Text } from '@citric/core';
import '@stack-spot/portal-theme/dist/theme.css';
import { useTranslate } from '@stack-spot/portal-translate';
import { useTour } from './hook.js';
/**
 * Tutorial: the component in a React Tour overlay that shows the next and previous buttons (for step navigation).
 * @param props the react props for the component {@link NavigationProps}.
 */
export const StepNavigation = ({ stepKey, nextButton, prevButton }) => {
    const { currentStep, steps, prevStep, finishStep } = useTour();
    const t = useTranslate(translations);
    return _jsxs(Flex, { w: 12, px: 5, py: 2, mt: "-1px", bg: "inverse.500", justifyContent: "space-between", alignItems: "center", children: [_jsxs(Text, { appearance: "microtext1", colorScheme: "inverse.contrastText", children: [currentStep + 1, " ", t.of, " ", steps.length] }), _jsxs(Flex, { sx: { gap: '8px' }, children: [currentStep >= 1 &&
                        _jsx(Button, { sx: { paddingInline: '20px' }, onClick: () => {
                                prevStep?.();
                                prevButton?.onClick?.();
                            }, size: "sm", appearance: "text", colorScheme: "light", children: prevButton?.text || t.back }), _jsx(Button, { sx: { paddingInline: '20px' }, onClick: () => {
                            nextButton?.onClick?.();
                            finishStep(stepKey);
                        }, size: "sm", colorScheme: "light", children: nextButton?.text || (currentStep < steps.length - 1 ? t.next : t.done) })] })] });
};
const translations = {
    en: {
        of: 'of',
        back: 'Back',
        next: 'Next',
        done: 'Done',
    },
    pt: {
        of: 'de',
        back: 'Voltar',
        next: 'PrÃ³ximo',
        done: 'Finalizado',
    },
};
//# sourceMappingURL=StepNavigation.js.map