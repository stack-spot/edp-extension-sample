import { Box, Flex } from '@citric/core'
import { LoadingCircular } from '@citric/ui'
import { useEffect, useState } from 'react'
import './on-nps-submit'

interface Props {
  tfLive: string,
  userId: string,
  orgId: string,
  portal: 'AI' | 'EDP',
}

export const RateComponent = ({ tfLive, userId, orgId, portal }: Props) => {
  const [isLoading, setIsLoading] = useState(true)

  useEffect(() => {
    (window as any).tf?.load()
    setTimeout(() => {
      setIsLoading(false)
    }, 2000)
  }, [])

  return (
    <Box sx={{ minWidth: '650px', minHeight: '500px' }}>
      {isLoading && <Flex alignItems="center" justifyContent="center" w="12" sx={{ height: '100%' }}>
        <LoadingCircular />
      </Flex>}
      <Box sx={{ opacity: isLoading ? '0' : 1 }}>
        <div data-tf-live={tfLive} 
          data-tf-hidden={`user_id=${userId},org_id=${orgId},portal_name=${portal}`} 
          data-tf-open="time" data-tf-open-value="100" data-tf-on-submit="onNpsSubmit" />
      </Box>
    </Box>
  )
}

