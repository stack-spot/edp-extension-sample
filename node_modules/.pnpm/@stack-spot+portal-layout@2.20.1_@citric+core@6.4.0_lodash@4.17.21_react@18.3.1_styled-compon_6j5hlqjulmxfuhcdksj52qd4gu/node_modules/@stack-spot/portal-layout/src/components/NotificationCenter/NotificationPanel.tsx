import { AnimatedHeight } from '@stack-spot/portal-components/AnimatedHeight'
import { ErrorFeedback } from '@stack-spot/portal-components/error'
import { NotificationList, useNotificationController } from '@stack-spot/portal-components/Notifications'
import { ScrollView } from '@stack-spot/portal-components/ScrollView'
import { NotificationPanelHeader } from './NotificationPanelHeader'
import { NotificationPanelFooter } from './NotificationsPanelFooter'
import { StyledBackdrop } from './styled'
import { NotificationPanelProps } from './types'

export const NotificationPanel = ({ filter, onFilter, loading, error, visible, onClose, ...props }: NotificationPanelProps) => {
  const controller = useNotificationController()
  return (
    <StyledBackdrop visible={visible} onClose={onClose} persistent>
      <AnimatedHeight
        className="notification-panel"
        visible={visible}
        header={<NotificationPanelHeader filter={filter} onChangeFilter={onFilter} onClose={onClose} />}
        footer={<NotificationPanelFooter onClose={onClose} />}
      >
        <ScrollView direction="vertical" style={{ maxHeight: 'calc(100vh - 300px)' }}>
          {error ? <ErrorFeedback code={error.code} direction="column" /> : <NotificationList
            {...props}
            compact
            loading={loading}
            onCommit={id => controller.markAsCommitted(id)}
            onClickAction={(id) => {
              onClose()
              controller.config.onClickAction?.(id)
            }}
          />}
        </ScrollView>
      </AnimatedHeight>
    </StyledBackdrop>
  )
}
