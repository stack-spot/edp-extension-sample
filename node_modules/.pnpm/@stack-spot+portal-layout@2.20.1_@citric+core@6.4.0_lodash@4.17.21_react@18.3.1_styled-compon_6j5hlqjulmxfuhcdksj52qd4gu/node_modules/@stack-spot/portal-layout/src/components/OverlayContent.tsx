import { Flex, Text } from '@citric/core'
import { TimesMini } from '@citric/icons'
import { IconButton } from '@citric/ui'
import { WithStyle, listToClass, theme } from '@stack-spot/portal-theme'
import { ReactNode } from 'react'
import { styled } from 'styled-components'
import { useDictionary } from '../dictionary'

export const CLOSE_OVERLAY_ID = 'close-overlay'

export interface OverlayContentProps extends WithStyle {
  /**
   * The title for the modal or right panel.
   */
  title: string,
  /**
   * The subtitle for the modal or right panel.
   */
  subtitle?: string,
  /**
   * The content for the modal or right panel.
   */
  children: ReactNode,
  /**
   * A function to run when the close button is pressed.
   */
  onClose?: () => void,
}

interface Props extends OverlayContentProps {
  /**
   * A function to run when the close button is pressed.
   */
  onClose: () => void,
  /**
   * Whether this is a modal or a right panel.
   */
  type: 'modal' | 'panel',
}

const ContentBox = styled.section`
  display: flex;
  flex-direction: column;
  border-radius: 1rem;
  background-color: ${theme.color.light['400']};
  &.modal {
    padding: 32px;
  }
  &.panel {
    padding: 20px;
    display: flex;
    flex-direction: column;
    flex: 1;
  }
  header {
    display: flex;
    flex-direction: row;
    margin-bottom: 1.25rem;
  }
`

/**
 * Renders a modal or right panel with title, subtitle, close button and content.
 * @param props the React props for the component {@link Props}.
 */
export const OverlayContent = ({ children, title, subtitle, className, style, onClose, type }: Props) => {
  const t = useDictionary()
  return (
    <ContentBox style={style} className={listToClass([className, type])}>
      <header>
        <Flex flexDirection="column" flex={1}>
          <Text as="h2" appearance={type === 'modal' ? 'h3' : 'h4'}>{title}</Text>
          {subtitle && <Text appearance="body2" colorScheme="light.700">{subtitle}</Text>}
        </Flex>
        <IconButton onClick={onClose} title={t.close} aria-label={t.close} id={CLOSE_OVERLAY_ID}><TimesMini /></IconButton>
      </header>
      {children}
    </ContentBox>
  )
}
