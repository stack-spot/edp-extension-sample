import { Flex } from '@citric/core'
import { SelectionListProps } from '@stack-spot/portal-components/SelectionList'
import { useAnchorTag } from '@stack-spot/portal-components/anchor'
import { Logo } from '@stack-spot/portal-components/svg'
import { ReactNode } from 'react'
import { NotificationCenter } from './NotificationCenter'
import { PortalSwitcher, PortalSwitcherProps } from './PortalSwitcher'
import { UserMenu } from './UserMenu'

export interface HeaderProps {
  /**
   * The logo to show in the header, if the portal switch feature is disabled.
   */
  logo?: ReactNode,
  /**
   * The url the logo links to, if the portal switch feature is disabled.
   */
  logoHref?: string,
  /**
   * The username to show in the user menu.
   */
  userName?: string,
  /**
   * The email to show in the user menu.
   */
  email?: string,
  /**
   * A portal switch config. If not specified, disables the portal switch feature.
   */
  portalSwitch?: PortalSwitcherProps['portals'],
  /**
   * The options to show in the user menu.
   */
  options?: SelectionListProps['items'],
  /**
   * A custom React Node to show at the center of the header. This is a good place for a search field, for instance.
   */
  center?: ReactNode,
  /**
   * A custom React Node to show at the right (end) of the header.
   */
  right?: ReactNode,
  /**
   * Whether or not to show the notification center.
   */
  showNotificationCenter?: boolean,
}

/**
 * The page header.
 * @param props the React props for the header {@link HeaderProps}.
 */
export const Header = ({ logo, logoHref, center, right, userName, email, options, portalSwitch, showNotificationCenter }: HeaderProps) => {
  const Link = useAnchorTag()

  return (
    <>
      {portalSwitch ?
        <PortalSwitcher portals={portalSwitch} /> :
        <Link href={logoHref} title="Home">{logo ?? <Logo style={{ width: 130 }} />}</Link>
      }
      <Flex flex={1}>{center}</Flex>
      {right}
      {showNotificationCenter && <NotificationCenter />}
      {userName && <UserMenu userName={userName} email={email} options={options} />}
    </>
  )
}
