import { Box, Button, Flex, IconBox, Styles, Text } from '@citric/core'
import { ArrowRight, TimesMini } from '@citric/icons'
import { IconButton } from '@citric/ui'
import { theme } from '@stack-spot/portal-theme'
import { Dictionary, useTranslate } from '@stack-spot/portal-translate'
import { useCallback, useEffect, useState } from 'react'
import { shouldShowNpsModal } from './hook'
import { checkVisibility } from './utils'

const style: Styles = {
  box: {
    width: '438px',
    bg: 'light.500',
    position: 'absolute',
    top: 0,
    right: 0,
    p: 5,
    zIndex: 1,
    borderRadius: '16px',
    boxShadow: `4px 4px 48px 0px ${theme.color.light[300]}`,
  },
}

export const FeedbackModal = ({ onClick, portal }: { onClick: () => void, portal: 'EDP' | 'AI' }) => {
  const t = useTranslate(dictionary)
  const [isNpsVisible, setIsNpsVisible] = useState(shouldShowNpsModal())

  const handleClose = () => {
    localStorage.setItem('RATED_US_IN', Date.now().toString())
    setIsNpsVisible(false)
  }
  
  const visibilityCheck = useCallback((event: StorageEvent) => checkVisibility(event, setIsNpsVisible), [])

  useEffect(() => {
    checkVisibility({ key: 'RATED_US_IN' } as StorageEvent, setIsNpsVisible)
    
    window.addEventListener('storage', visibilityCheck)

    return () => {
      window.removeEventListener('storage', visibilityCheck)
    }
  }, [])

  return isNpsVisible ? (
    <Box sx={style.box} id="feedback-modal">
      <Flex justifyContent="space-between" flexWrap="nowrap">
        <Text appearance="h5" mb={6}>{t.title}{portal}?</Text>
        <IconButton onClick={handleClose} id="feedback-modal-close-icon">
          <TimesMini />
        </IconButton>
      </Flex>
      <Text sx={{ lineHeight: '24px' }}>
        {t.description}
      </Text>
      <Flex flexDirection="row-reverse" mt={7} mb={4}>
        <Button onClick={onClick} size="md">
          {t.buttonText}
          <IconBox colorIcon="inverse.contrastText" ml={2}>
            <ArrowRight />
          </IconBox>
        </Button>
      </Flex>
    </Box>
  ) : null
}

const dictionary = {
  en: {
    title: 'How’s your experience with StackSpot ',
    description: 'Your feedback helps us make the platform more useful and intuitive for you. It only takes a few minutes.',
    buttonText: 'Share your feedback',
  },
  pt: {
    title: 'Como está sua experiência com StackSpot ',
    description: 'Seu feedback nos ajuda a tornar a plataforma mais útil e intuitiva para você. Leva apenas alguns minutos.',
    buttonText: 'Compartilhe seu feedback',
  },
} satisfies Dictionary

