import { Button, Flex, IconBox, Text } from '@citric/core'
import { TimesMini } from '@citric/icons'
import { IconButton } from '@citric/ui'
import { CLOSE_OVERLAY_ID } from '../OverlayContent'
import { useNotificationsDictionary } from './dictionary'
import { FilterButtonProps, NotificationPanelHeaderProps } from './types'

const FilterButton = ({ current, onChangeFilter, value }: FilterButtonProps) => {
  const t = useNotificationsDictionary()
  const active = current === value

  return (
    <Button
      appearance="text"
      role="button"
      aria-label={t[`${value}.ariaLabel`]}
      aria-pressed={active}
      onClick={() => onChangeFilter(value)}
      className="filter-btn"
    >
      <Flex flexDirection="row" style={{ gap: '8px' }} alignItems="center">
        <Text colorScheme="inverse" appearance="microtext1">
          {t[`${value}.label`]}
        </Text>
      </Flex>
    </Button>
  )
}

export const NotificationPanelHeader = ({ filter, onChangeFilter, onClose }: NotificationPanelHeaderProps) => {
  const t = useNotificationsDictionary()
  return (
    <Flex flexDirection="column">
      <Flex justifyContent="space-between">
        <Text appearance="h4" as="h2">
          {t.notifications}
        </Text>
        <IconButton id={CLOSE_OVERLAY_ID} aria-label={t.close} onClick={onClose}>
          <IconBox size="xs">
            <TimesMini />
          </IconBox>
        </IconButton>
      </Flex>
      <ul className="filter-list">
        <li><FilterButton current={filter} onChangeFilter={onChangeFilter} value="ALL" /></li>
        <li><FilterButton current={filter} onChangeFilter={onChangeFilter} value="UNREAD" /></li>
        <li><FilterButton current={filter} onChangeFilter={onChangeFilter} value="HIGH" /></li>
        <li><FilterButton current={filter} onChangeFilter={onChangeFilter} value="MEDIUM" /></li>
        <li><FilterButton current={filter} onChangeFilter={onChangeFilter} value="LOW" /></li>
      </ul>
    </Flex>
  )
}
