import { Flex, IconBox, LinkBox, Text } from '@citric/core'
import { ChevronDown } from '@citric/icons'
import { Avatar } from '@citric/ui'
import { SelectionList, SelectionListProps } from '@stack-spot/portal-components/SelectionList'
import { theme } from '@stack-spot/portal-theme'
import { Dictionary, interpolate, useTranslate } from '@stack-spot/portal-translate'
import { useEffect, useState } from 'react'
import { styled } from 'styled-components'
import { userMenuManager } from './user-menu-manager'

interface Props {
  /**
   * The user name.
   */
  userName: string,
  /**
   * The user email.
   */
  email?: string,
  /**
   * The menu options.
   */
  options?: SelectionListProps['items'],
}

const USER_MENU_ID = 'userMenu'

const UserMenuBox = styled.div`
  .user-menu-header {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 12px;
    border-bottom: 2px solid ${theme.color.light['600']};
  }

  .selection-list {
    position: absolute;
    top: var(--header-height);
    right: 20px;
    width: 266px;

    .selection-list-content {
      border: none;
      padding: 16px 16px 8px;
      background-color: ${theme.color.light['400']};
    }

    li {
      margin: 8px 0;
      & > a {
        border-radius: 6px;
        &:hover, &:focus {
          background: ${theme.color.light['500']};
        }
      }
    }
  }

  .username {
    margin: 5px 0 2px 0;
  }

  .chevron {
    transition: transform ease-out 0.3s;
  }
`

const UserMenuHeader = ({ userName, email }: Omit<Props, 'options'>) => (
  <div className="user-menu-header">
    <Avatar size="xs">{userName}</Avatar>
    <Text appearance="body1" className="username">{userName}</Text>
    {email && <Text appearance="microtext1" className="email" colorScheme="light.700">{email}</Text>}
  </div>
)

/**
 * Renders the user menu.
 * @param props the component's props {@link Props}.
 */
export const UserMenu = ({ userName, email, options }: Props) => {
  const t = useTranslate(dictionary)
  const [visible, setVisible] = useState(false)

  useEffect(() => userMenuManager.subscribe(setVisible), [])

  return (
    <UserMenuBox>
      <LinkBox
        as="button"
        onClick={() => setVisible(v => !v)}
        aria-controls={USER_MENU_ID}
        aria-expanded={visible}
        aria-label={interpolate(t.accountMenu, [userName])}
      >
        <Flex alignItems="center">
          <Avatar size="xs" aria-label={interpolate(t.accountMenu, [userName])}>{userName}</Avatar>
          <IconBox colorIcon="inverse.500" className="chevron" style={visible ? { transform: 'rotate(180deg)' } : undefined}>
            <ChevronDown />
          </IconBox>
        </Flex>
      </LinkBox>

      {options?.length
        ? <SelectionList
          id={USER_MENU_ID}
          visible={visible}
          before={<UserMenuHeader userName={userName} email={email} />}
          items={options!}
          onHide={() => setVisible(false)}
          maxHeight="600px"
        />
        : null
      }
    </UserMenuBox>
  )
}

const dictionary = {
  en: {
    accountMenu: 'Profile menu of $0',
  },
  pt: {
    accountMenu: 'Menu do perfil $0',
  },
} satisfies Dictionary
