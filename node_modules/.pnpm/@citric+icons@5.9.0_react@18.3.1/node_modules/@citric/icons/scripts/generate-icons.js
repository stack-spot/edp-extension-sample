/* eslint-disable @typescript-eslint/no-var-requires */
import fs from 'fs'
import glob from 'glob-promise'

const COMPONENTS_DIR = 'src'
const iconList = []

async function createSvgComponent(icon) {
  const iconName = icon.substring(icon.indexOf('/') + 1, icon.indexOf('.'))
  const file = await fs.promises.readFile(icon, 'utf8')
  const svg = file
    .replace(/width="(.+?)"/, 'width="16"')
    .replace(/height="(.+?)"/, 'height="16"')
    .replaceAll(/fill="(.+?)"/gm, '')
    .replace(/viewBox="(.+?)"/gm, '')
    .replace('<svg ', '<svg viewBox="0 0 512 512" ref={ref} {...props} ')
    .replace(/<g clip-path*.*>\n/gm, '')
    .replace(/<\/g>[\s\S]*.*<\/defs>\n/gm, '')

  const svgComponent = `import { forwardRef, Ref, SVGProps } from 'react'
  const ${iconName} = forwardRef((props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (
    ${svg}
  ))

  export default ${iconName}`

  await fs.promises.writeFile(`${COMPONENTS_DIR}/${iconName}.tsx`, svgComponent)

  iconList.push(`export {default as ${iconName}} from './${iconName}'`)
}

async function main() {
  const icons = glob.sync('svg/*.svg')
  const result = []

  icons.forEach((icon) => {
    result.push(createSvgComponent(icon))
  })

  await Promise.all(result)

  fs.writeFileSync(`${COMPONENTS_DIR}/index.ts`, iconList.join('\n'))
}

main()