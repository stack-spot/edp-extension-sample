import { getNetworkConfig } from './config';
import { NetworkObject } from './NetworkObject';
export function createNetworkProxy(name) {
    let networkObjects;
    function init() {
        const config = getNetworkConfig();
        const methods = config[name];
        if (!methods) {
            throw new Error(`${name} is not a valid network client. Valid clients are: ${Object.keys(config).join(', ')}.`);
        }
        networkObjects = {};
        for (const method in methods) {
            networkObjects[method] = new NetworkObject(name, method, methods[method]);
        }
    }
    return new Proxy({}, {
        get(_, property) {
            if (!networkObjects)
                init();
            const networkObject = networkObjects?.[String(property)];
            if (!networkObject) {
                throw new Error(`Network client "${name}" has no member named "${String(property)}."`);
            }
            return networkObject;
        },
    });
}
//# sourceMappingURL=proxy.js.map