import { UseMutationOptions } from '@tanstack/react-query';
export declare class NetworkObject {
    readonly client: string;
    readonly resource: string;
    readonly arity: number;
    constructor(client: string, resource: string, arity: number);
    private getVariablesAndOptions;
    private getKey;
    mutate(...args: any[]): Promise<any>;
    query(...args: any[]): Promise<any>;
    useQuery(...args: any[]): unknown;
    useStatefulQuery(...args: any[]): unknown[];
    useMutation(options: UseMutationOptions): (boolean | Error | import("@tanstack/react-query").UseMutationResult<any, Error, void, unknown> | import("@tanstack/react-query").UseMutateAsyncFunction<any, Error, void, unknown> | null)[];
    invalidate(variables: any): void;
    isAllowed(...args: any[]): Promise<any>;
    useAllowed(...args: any[]): unknown[];
    cancel(...args: any[]): void;
}
//# sourceMappingURL=NetworkObject.d.ts.map