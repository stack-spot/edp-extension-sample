import { extractConfigFromUrl } from '@stack-spot/portal-extension-commons'
import { CSSToCitricAdapter, setTheme } from '@stack-spot/portal-theme'
import '@stack-spot/portal-theme/dist/theme.css'
import { setLanguage } from '@stack-spot/portal-translate'
import { QueryClient, QueryClientProvider, useQueryClient } from '@tanstack/react-query'
import { useEffect, useState } from 'react'
import { messageHandler } from './MessageHandler'
import { networkConfigReady } from './network/config'

export const StackspotExtension = ({ children }: { children: React.ReactNode }) => {
  const [isReady, setReady] = useState(false)
  const queryClient = useQueryClient(new QueryClient({ defaultOptions: { queries: { refetchOnWindowFocus: false } } }))

  useEffect(() => {
    const { theme, language } = extractConfigFromUrl()
    if (theme) setTheme(theme)
    if (language) setLanguage(language)
    messageHandler.start()
    const resizeObserver = new ResizeObserver(() => {
      const { width, height } = document.querySelector('html')!.getBoundingClientRect()
      messageHandler.resize(width, height)
    })
    resizeObserver.observe(document.body)
  }, [])

  useEffect(() => {
    (async () => {
      await networkConfigReady()
      setReady(true)
    })()
  }, [])

  return isReady && (
    <QueryClientProvider client={queryClient}>
      <CSSToCitricAdapter>
        {children}
      </CSSToCitricAdapter>
    </QueryClientProvider>
  )
}
