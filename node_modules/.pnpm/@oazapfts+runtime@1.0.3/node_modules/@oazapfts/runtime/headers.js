function o(e, r) {
  const n = t(e);
  return t(r).forEach((i, s) => {
    n.set(s, i);
  }), n;
}
function t(e) {
  return e && !(e instanceof Headers) && !Array.isArray(e) ? new Headers(
    Object.fromEntries(
      Object.entries(e).filter(([, r]) => r != null).map(([r, n]) => [r, String(n)])
    )
  ) : new Headers(e);
}
export {
  o as mergeHeaders,
  t as normalizeHeaders
};
//# sourceMappingURL=headers.js.map
