{"version":3,"file":"headers.js","sources":["../src/headers.ts"],"sourcesContent":["export type CustomHeaders = Record<\n  string,\n  string | null | boolean | number | undefined\n>;\n\nexport function mergeHeaders(\n  base: HeadersInit | CustomHeaders | undefined,\n  overwrite?: HeadersInit | CustomHeaders,\n) {\n  const baseHeaders = normalizeHeaders(base);\n  const overwriteHeaders = normalizeHeaders(overwrite);\n\n  overwriteHeaders.forEach((value, key) => {\n    baseHeaders.set(key, value);\n  });\n\n  return baseHeaders;\n}\n\nexport function normalizeHeaders(\n  headers: HeadersInit | CustomHeaders | undefined,\n) {\n  // This might be custom header config containing null | boolean | number | undefined\n  // By default Headers constructor will convert them to string but we don't want that\n  // for nullish values.\n  if (headers && !(headers instanceof Headers) && !Array.isArray(headers)) {\n    return new Headers(\n      Object.fromEntries(\n        Object.entries(headers)\n          .filter(([, v]) => v != null)\n          .map(([k, v]) => [k, String(v)]),\n      ),\n    );\n  }\n\n  return new Headers(headers);\n}\n"],"names":["mergeHeaders","base","overwrite","baseHeaders","normalizeHeaders","value","key","headers","v","k"],"mappings":"AAKgB,SAAAA,EACdC,GACAC,GACA;AACM,QAAAC,IAAcC,EAAiBH,CAAI;AAGxB,SAFQG,EAAiBF,CAAS,EAElC,QAAQ,CAACG,GAAOC,MAAQ;AAC3B,IAAAH,EAAA,IAAIG,GAAKD,CAAK;AAAA,EAAA,CAC3B,GAEMF;AACT;AAEO,SAASC,EACdG,GACA;AAII,SAAAA,KAAW,EAAEA,aAAmB,YAAY,CAAC,MAAM,QAAQA,CAAO,IAC7D,IAAI;AAAA,IACT,OAAO;AAAA,MACL,OAAO,QAAQA,CAAO,EACnB,OAAO,CAAC,GAAGC,CAAC,MAAMA,KAAK,IAAI,EAC3B,IAAI,CAAC,CAACC,GAAGD,CAAC,MAAM,CAACC,GAAG,OAAOD,CAAC,CAAC,CAAC;AAAA,IACnC;AAAA,EAAA,IAIG,IAAI,QAAQD,CAAO;AAC5B;"}