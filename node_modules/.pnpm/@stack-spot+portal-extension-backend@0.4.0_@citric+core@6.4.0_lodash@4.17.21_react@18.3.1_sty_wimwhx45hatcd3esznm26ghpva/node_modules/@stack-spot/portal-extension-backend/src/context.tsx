import { createContext, useContext } from 'react'

interface ExtensionContext {
  url?: string,
}

const context = createContext<ExtensionContext>({})

export const ExtensionsProvider = ({ children, ...props }: Required<ExtensionContext> & { children: React.ReactNode }) => (
  <context.Provider value={props}>
    {children}
  </context.Provider>
)

export function useExtensionContext() {
  const ctx = useContext(context)
  if (!ctx?.url) throw new Error('An Extension requires an ExtensionProvider to be in the React tree.')
  return ctx as Required<ExtensionContext>
}
