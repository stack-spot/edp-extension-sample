import { accountClient, agentClient, aiClient, cloudAccountClient, cloudPlatformClient, cloudPlatformHorizonClient, cloudRuntimesClient, cloudServicesClient, contentClient, eventBusClient, insightsClient, notificationClient, runtimeManagerClient, secretsClient, workflowClient, workspaceClient, workspaceManagerClient, workspaceSearchClient, } from '@stack-spot/portal-network';
function buildClientConfig(client) {
    const result = {};
    for (const method in client) {
        result[method] = client[method]?.fn?.length ?? 0;
    }
    return result;
}
export function buildNetworkConfig() {
    return {
        accountClient: buildClientConfig(accountClient),
        agentClient: buildClientConfig(agentClient),
        aiClient: buildClientConfig(aiClient),
        cloudAccountClient: buildClientConfig(cloudAccountClient),
        cloudPlatformClient: buildClientConfig(cloudPlatformClient),
        cloudPlatformHorizonClient: buildClientConfig(cloudPlatformHorizonClient),
        cloudRuntimesClient: buildClientConfig(cloudRuntimesClient),
        cloudServicesClient: buildClientConfig(cloudServicesClient),
        contentClient: buildClientConfig(contentClient),
        eventBusClient: buildClientConfig(eventBusClient),
        insightsClient: buildClientConfig(insightsClient),
        notificationClient: buildClientConfig(notificationClient),
        runtimeManagerClient: buildClientConfig(runtimeManagerClient),
        secretsClient: buildClientConfig(secretsClient),
        workflowClient: buildClientConfig(workflowClient),
        workspaceClient: buildClientConfig(workspaceClient),
        workspaceManagerClient: buildClientConfig(workspaceManagerClient),
        workspaceSearchClient: buildClientConfig(workspaceSearchClient),
    };
}
//# sourceMappingURL=network-config.js.map