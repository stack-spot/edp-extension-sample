export type ThemeName = 'light' | 'dark';
export type ThemeKind = 'light' | 'dark';
export declare const colorSchemeName: readonly ["primary", "secondary", "tertiary", "highlight", "danger", "warning", "success", "light", "inverse"];
export type ColorSchemeName = typeof colorSchemeName[number];
declare const colorSchemeLevel: readonly [300, 400, 500, 600, 700, "contrastText"];
export type ColorSchemeLevel = typeof colorSchemeLevel[number];
export declare const colorPaletteName: readonly ["blue", "gray", "indigo", "moss", "orange", "cyan", "pink", "purple", "red", "teal", "yellow"];
export type ColorPaletteName = typeof colorPaletteName[number];
export declare const colorPaletteLevel: readonly [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];
export type ColorPaletteLevel = typeof colorPaletteLevel[number];
export type ColorScheme = Record<ColorSchemeName, Record<ColorSchemeLevel, string>>;
export type ColorPalette = Record<ColorPaletteName, Record<ColorPaletteLevel, string>>;
export type ColorName = ColorPaletteName | ColorSchemeName;
export type ColorSchemeKey = `${ColorSchemeName}.${ColorSchemeLevel}`;
export type ColorPaletteKey = `${ColorPaletteName}.${ColorPaletteLevel}`;
export type ColorKey = ColorSchemeKey | ColorPaletteKey;
export type Platform = 'vscode' | 'intellij' | 'web';
interface ThemeVariables {
    color: ColorScheme & ColorPalette & {
        /**
         * Background used for code editors like Monaco.
         */
        codeBg: string;
    };
}
/**
 * Theme. Includes only colors for now.
 */
export declare const theme: ThemeVariables;
/**
 * Gets the current theme kind.
 *
 * A theme kind can be either "light" or "dark". This is not necessarily the theme name. Examples:
 *
 * - Although, right now, StackSpot has only two themes: "light" and the "dark", it used to have three and two of them were dark.
 * - When running this inside VSCode, the theme name can be one of several, but all of them are either light or dark.
 *
 * @returns "dark" if the theme is mostly dark or "light" if the theme is mostly light. If no theme is set, "dark" is returned.
 */
export declare function getThemeKind(): ThemeKind;
/**
 * Gets the name of the current theme.
 *
 * Do not mistake with `getThemeKind` (read the documentation for `getThemeKind` for more details).
 *
 * This is only valid under a web environment.
 *
 * @returns the name of the current theme or "dark" if no theme is set.
 */
export declare function getThemeName(): ThemeName;
/**
 * The theme library can be run either in a Web environment, VSCode or IntelliJ. This function tells which environment it's running on.
 * @returns the platform
 */
export declare function getPlatform(): Platform;
/**
 * Changes the current theme. This is only valid under a Web environment.
 *
 * This is only valid under a web environment.
 *
 * @param name the name of the theme to change to.
 * @param setCookie whether or not to set the theme cookie (true by default).
 * @param domain the domain to set the cookie, will be ".stackspot.com" by default.
 */
export declare function setTheme(name: ThemeName, setCookie?: boolean, domain?: string): void;
/**
 * Loads the current theme from the cookies. If no theme has been set before, "dark" is loaded.
 */
export declare function loadTheme(): void;
export {};
//# sourceMappingURL=definition.d.ts.map