import { useEffect, useState } from 'react'
import { getThemeKind, getThemeName } from './definition'
import { themeObserver } from './theme-observer'

/**
 * A React hook that returns the current theme kind. This is updated whenever the theme changes.
 * 
 * The theme kind can be different than the theme name, check the documentation for `getThemeKind` for more details.
 * 
 * @returns "dark" if the theme is mostly dark or "light" if the theme is mostly light. If no theme is set, "dark" is returned.
 */
export const useThemeKind = () => {
  const [kind, setKind] = useState(getThemeKind())
  useEffect(() => themeObserver.onThemeKindChange(setKind), [])
  return kind
}

/**
 * A React hook that returns the current theme name. This is updated whenever the theme changes.
 * 
 * The theme name can be different than the theme kind, check the documentation for `getThemeKind` for more details.
 * 
 * This is only usable in web environments.
 * 
 * @returns the name of the current theme.
 */
export const useThemeName = () => {
  const [name, setName] = useState(getThemeName())
  useEffect(() => themeObserver.onThemeNameChange(setName), [])
  return name
}
