import { ThemeName } from '@stack-spot/portal-theme'
import { Language } from '@stack-spot/portal-translate'
import {
  ExtensionConfigMessage,
  ExtensionOperations,
  ExtensionReadyMessage,
  ExtensionRequestMessage,
  ExtensionResizeMessage,
  NetworkConfig,
  SuccessfulExtensionResponseMessage,
  UnsuccessfulExtensionResponseMessage,
} from './types'

let id = 0

function next() {
  id = id === Number.MAX_SAFE_INTEGER ? 1 : id + 1
  return id
}

export function createReadyMessage(): ExtensionReadyMessage {
  return {
    signal: 'ready',
    id: next(),
    type: 'stackspot-extension-message',
  }
}

export function createResizeMessage(width: number, height: number): ExtensionResizeMessage {
  return {
    signal: 'resize',
    id: next(),
    type: 'stackspot-extension-message',
    width,
    height,
  }
}

export function createConfigMessage(
  config: { themeName?: ThemeName, language?: Language, network?: NetworkConfig },
): ExtensionConfigMessage {
  return {
    signal: 'config',
    id: next(),
    type: 'stackspot-extension-message',
    ...config,
  }
}

type CreateRequestMessageArgs<T extends keyof ExtensionOperations> = ExtensionOperations[T]['request'] extends void
  ? [T]
  : [T, ExtensionOperations[T]['request']]

export function createRequestMessage<T extends keyof ExtensionOperations>(
  ...[operation, variables]: CreateRequestMessageArgs<T>
): ExtensionRequestMessage<T> {
  return {
    type: 'stackspot-extension-message',
    id: next(),
    signal: 'request',
    operation,
    variables,
  }
}

export function createSuccessfulResponseMessage<T extends keyof ExtensionOperations>(
  operation: T,
  id: number,
  result: ExtensionOperations[T]['response'],
): SuccessfulExtensionResponseMessage<T> {
  return {
    type: 'stackspot-extension-message',
    id,
    signal: 'response-success',
    operation,
    result,
  }
}

export function createUnsuccessfulResponseMessage<T extends keyof ExtensionOperations>(
  operation: T,
  id: number,
  error: string,
  status?: number,
): UnsuccessfulExtensionResponseMessage {
  return {
    type: 'stackspot-extension-message',
    id,
    signal: 'response-error',
    operation,
    error,
    status,
  }
}
