import { ThemeName } from '@stack-spot/portal-theme'
import { Language } from '@stack-spot/portal-translate'

export interface ExtensionMessage {
  type: 'stackspot-extension-message',
  signal: 'ready' | 'request' | 'response-success' | 'response-error' | 'config' | 'resize',
  id: number,
}

export interface ExtensionReadyMessage extends ExtensionMessage {
  signal: 'ready',
}

export interface ExtensionResizeMessage extends ExtensionMessage {
  signal: 'resize',
  width: number,
  height: number,
}

/**
 * Each key is a client.
 * Each value is a map, where:
 * Each key is a method and;
 * Each value is the arity of the method.
 */
export type NetworkConfig = Record<string, Record<string, number>>

export interface ExtensionConfigMessage extends ExtensionMessage {
  signal: 'config',
  language?: Language,
  themeName?: ThemeName,
  network?: NetworkConfig,
}

export interface CustomModalOptions {
  path: string,
  onClose?: () => void,
  size?: 'small' | 'medium' | 'large' | 'fit-content',
}

export interface ModalOptions extends CustomModalOptions {
  title: string,
  subtitle?: string,
}

export interface CustomRightPanelOptions extends CustomModalOptions {
  size?: 'small' | 'medium' | 'large',
}

export interface RightPanelOptions extends ModalOptions {
  size?: 'small' | 'medium' | 'large',
}

export interface AlertOptions {
  title: string,
  subtitle: string,
  confirm?: string,
}

export interface ConfirmOptions extends AlertOptions {
  cancel?: string,
}

export interface ToasterOptions {
  type?: 'success' | 'warning' | 'error' | 'info',
  message: string,
}

export interface UserData {
  name: string,
  email: string,
}

export interface CurrentPageResponse {
  key: string,
  params: Record<string, any>,
}

export interface NetworkRequest {
  client: string,
  resource: string,
  method: 'query' | 'mutate' | 'invalidate' | 'cancel' | 'allowed',
  arguments: any[],
}

export interface ExtensionOperations {
  showModal: { request: ModalOptions, response: void },
  showRightPanel: { request: RightPanelOptions, response: void },
  showCustomModal: { request: CustomModalOptions, response: void },
  showCustomRightPanel: { request: CustomRightPanelOptions, response: void },
  closeModal: { request: void, response: void },
  closeRightPanel: { request: void, response: void },
  alert: { request: AlertOptions, response: void },
  confirm: { request: ConfirmOptions, response: boolean },
  showToaster: { request: ToasterOptions, response: void },
  getExtensionSlug: { request: void, response: string },
  getExtensionVersion: { request: void, response: string | undefined },
  getCurrentPage: { request: void, response: CurrentPageResponse },
  getUserData: { request: void, response: UserData },
  network: { request: NetworkRequest, response: any },
}

export interface ExtensionRequestMessage<T extends keyof ExtensionOperations> extends ExtensionMessage {
  signal: 'request',
  operation: T,
  variables: ExtensionOperations[T]['request'],
}

export interface SuccessfulExtensionResponseMessage<T extends keyof ExtensionOperations> extends ExtensionMessage {
  signal: 'response-success',
  operation: T,
  result: ExtensionOperations[T]['response'],
}

export interface UnsuccessfulExtensionResponseMessage extends ExtensionMessage {
  signal: 'response-error',
  operation: keyof ExtensionOperations,
  error?: string,
  status?: number,
}

export type ExtensionResponseMessage<T extends keyof ExtensionOperations> = 
  SuccessfulExtensionResponseMessage<T> | UnsuccessfulExtensionResponseMessage
