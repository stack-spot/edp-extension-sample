import { ThemeName } from '@stack-spot/portal-theme';
import { Language } from '@stack-spot/portal-translate';
import { ExtensionConfigMessage, ExtensionOperations, ExtensionReadyMessage, ExtensionRequestMessage, ExtensionResizeMessage, NetworkConfig, SuccessfulExtensionResponseMessage, UnsuccessfulExtensionResponseMessage } from './types';
export declare function createReadyMessage(): ExtensionReadyMessage;
export declare function createResizeMessage(width: number, height: number): ExtensionResizeMessage;
export declare function createConfigMessage(config: {
    themeName?: ThemeName;
    language?: Language;
    network?: NetworkConfig;
}): ExtensionConfigMessage;
type CreateRequestMessageArgs<T extends keyof ExtensionOperations> = ExtensionOperations[T]['request'] extends void ? [T] : [T, ExtensionOperations[T]['request']];
export declare function createRequestMessage<T extends keyof ExtensionOperations>(...[operation, variables]: CreateRequestMessageArgs<T>): ExtensionRequestMessage<T>;
export declare function createSuccessfulResponseMessage<T extends keyof ExtensionOperations>(operation: T, id: number, result: ExtensionOperations[T]['response']): SuccessfulExtensionResponseMessage<T>;
export declare function createUnsuccessfulResponseMessage<T extends keyof ExtensionOperations>(operation: T, id: number, error: string, status?: number): UnsuccessfulExtensionResponseMessage;
export {};
//# sourceMappingURL=factory.d.ts.map