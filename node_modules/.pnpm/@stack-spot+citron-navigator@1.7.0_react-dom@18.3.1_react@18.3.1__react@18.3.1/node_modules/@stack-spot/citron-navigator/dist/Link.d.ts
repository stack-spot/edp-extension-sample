/// <reference types="react" />
import { AnyRoute, Route } from './Route.js';
import { RequiredKeysOf } from './types.js';
type RouteProps<T extends AnyRoute | undefined> = {
    to?: T;
} & (T extends Route<any, infer Params, any> ? Params extends void ? unknown : RequiredKeysOf<Params> extends never ? {
    params?: Params;
} : {
    params: Params;
} : unknown);
type Props<T extends AnyRoute | undefined> = React.AnchorHTMLAttributes<HTMLAnchorElement> & RouteProps<T>;
interface LinkFn {
    <T extends AnyRoute | undefined>(props: Props<T>): React.ReactElement;
}
export declare const Link: LinkFn;
export {};
//# sourceMappingURL=Link.d.ts.map