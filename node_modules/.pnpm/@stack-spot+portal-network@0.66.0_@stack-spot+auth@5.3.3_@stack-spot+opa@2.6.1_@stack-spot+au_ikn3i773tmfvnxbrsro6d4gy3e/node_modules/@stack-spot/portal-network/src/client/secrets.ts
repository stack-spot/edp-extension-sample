import { HttpError } from '@oazapfts/runtime'

import { createKey, defaults, deleteKey, deleteSecretValue, editKey, encrypt, getAll1, getAvailability, updateSecretValue } from '../api/secrets'
import apis from '../apis.json'
import { DefaultAPIError } from '../error/DefaultAPIError'
import { secretsDictionary } from '../error/dictionary/secrets'
import { StackspotAPIError } from '../error/StackspotAPIError'
import { ReactQueryNetworkClient } from '../network/ReactQueryNetworkClient'

class SecretClient extends ReactQueryNetworkClient {
  constructor() {
    super(apis.secrets.url, defaults)
  }

  protected buildStackSpotError(error: HttpError): StackspotAPIError {
    return new DefaultAPIError(error.data, error.status, secretsDictionary, error.headers)
  }

  /**
   * Create a key
   */
  createKey = this.mutation(createKey)

  /**
   * Get all keys
   */
  getAllKeys = this.query(getAll1)

  /**
   * Delete a key
   */
  deleteKey = this.mutation(deleteKey)

  /**
   * Update a key's description
   */
  updateKey = this.mutation(editKey)

  /**
   * Get which secrets are defined or undefined for a user
   */
  getAvailability = this.query(getAvailability)

  /**
   * Update a secret's value
   */
  updateSecretValue = this.mutation(updateSecretValue)

  /**
   * Delete a secret's value
   */
  deleteSecretValue = this.mutation(deleteSecretValue)

  /**
 * Encrypt a value
 */
  encrypt = this.mutation(encrypt)
}

export const secretsClient = new SecretClient()
