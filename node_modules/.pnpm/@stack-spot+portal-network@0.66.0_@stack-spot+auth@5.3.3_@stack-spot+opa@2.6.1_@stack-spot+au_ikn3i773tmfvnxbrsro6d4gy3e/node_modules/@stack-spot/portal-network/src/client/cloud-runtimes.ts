import { HttpError } from '@oazapfts/runtime'
import
{
  createApplication,
  createDeployment,
  createSchedule,
  defaults,
  getApplication,
  getApplicationHistory,
  getDeployment,
  getDeploymentHealth,
  getDeploymentLogs,
  getDeploymentStatus,
  getInstances,
  getLastDeploymentByRuntime,
  getRepositoryImages,
  getScheduling,
  getSecrets,
  listApplications,
  listDeployments,
  listRepositories,
  listRuntimes,
  setAutoscaling,
  startApplication,
  stopApplication,
} from '../api/cloudRuntimes'
import apis from '../apis.json'
import { DefaultAPIError } from '../error/DefaultAPIError'
import { StackspotAPIError } from '../error/StackspotAPIError'
import { ReactQueryNetworkClient } from '../network/ReactQueryNetworkClient'
import { removeAuthorizationParam } from '../utils/remove-authorization-param'
import { baseDictionary } from '../error/dictionary/base'

class CloudRuntimesClient extends ReactQueryNetworkClient {
  constructor() {
    super(apis.cloudRuntimes.url, defaults)
  }

  protected buildStackSpotError(error: HttpError): StackspotAPIError {
    return new DefaultAPIError(error.data, error.status, baseDictionary, error.headers)
  }
  /**
   * Get list of applications
   */
  listApplications = this.query(removeAuthorizationParam(listApplications))
  /**
   * Get an application by id
   */
  application = this.query(removeAuthorizationParam(getApplication))
  /**
   * Get an application history
   */
  applicationHistory = this.query(removeAuthorizationParam(getApplicationHistory))
  /**
   * Get list of application deployments
   */
  listApplicationDeployments = this.query(removeAuthorizationParam(listDeployments))
  /**
   * Get list of last deployments by runtime
   */
  listLastApplicationDeploymentsByRuntime = this.query(removeAuthorizationParam(getLastDeploymentByRuntime))
  /**
   * Get an application deployment by id
   */
  applicationDeployment = this.query(removeAuthorizationParam(getDeployment))
  /**
   * Get an application deployment status
   */
  applicationDeploymentStatus = this.query(removeAuthorizationParam(getDeploymentStatus))
  /**
   * Get an application deployment health
   */
  applicationDeploymentHealth = this.query(removeAuthorizationParam(getDeploymentHealth))
  /**
   * Get an application deployment logs
   */
  applicationDeploymentLogs = this.query(removeAuthorizationParam(getDeploymentLogs))
  /**
   * Get an application runtimes
   */
  listApplicationRuntimes = this.query(removeAuthorizationParam(listRuntimes))
  /**
   * Get list of repositories
   */
  listRepositories = this.query(removeAuthorizationParam(listRepositories))
  /**
   * Get list of images from a repository
   */
  listRepositoryImages = this.query(removeAuthorizationParam(getRepositoryImages))
  /**
   * Create a deploy of the application
   */
  createDeployment = this.mutation(removeAuthorizationParam(createDeployment))
  /**
   * Create an application
   */
  createApplication = this.mutation(removeAuthorizationParam(createApplication))
  /**
   * Start an application
   */
  startApplication = this.mutation(removeAuthorizationParam(startApplication))
  /**
   * Stop an application
   */
  stopApplication = this.mutation(removeAuthorizationParam(stopApplication))
  /**
   * Get secret keys of an application by runtime
   */
  applicationSecretKeys = this.query(removeAuthorizationParam(getSecrets))
  /**
   * Get application instances in use
   */
  applicationInstancesNow = this.query(removeAuthorizationParam(getInstances))
  /**
   * Edit application instances
   */
  editApplicationInstances = this.mutation(removeAuthorizationParam(setAutoscaling))
  /**
   * Configure a schedule for application
   */
  createSchedule = this.mutation(removeAuthorizationParam(createSchedule))
  /**
   * Get application scheduling
   */
  getScheduling = this.query(removeAuthorizationParam(getScheduling))
}


export const cloudRuntimesClient = new CloudRuntimesClient()
