import { UseMutationOptions } from '@tanstack/react-query';
import { StackspotAPIError } from '../error/StackspotAPIError.js';
import { ManualOperation } from './ManualOperation.js';
import { FullOperationConfig, MutationObject } from './types.js';
export declare class ManualMutation<Variables extends Record<string, any> | void, Result> extends ManualOperation<Variables> implements MutationObject<Variables, Result> {
    constructor(config: FullOperationConfig<Variables extends void ? [AbortSignal] : [AbortSignal, Variables], Result>);
    private makeRequest;
    mutate(...args: Variables extends void ? [signal?: AbortSignal] : [variables: Variables, signal?: AbortSignal]): Promise<any>;
    useMutation(options?: Omit<UseMutationOptions<Result, StackspotAPIError, Variables>, 'mutationFn'> & {
        signal?: AbortSignal;
    }): readonly [any, boolean, StackspotAPIError | undefined, any];
}
//# sourceMappingURL=ManualMutation.d.ts.map