/* eslint-disable react-hooks/rules-of-hooks */
import { useMutation } from '@tanstack/react-query';
import { ManualOperation } from './ManualOperation.js';
import { queryClient } from './react-query-client.js';
export class ManualMutation extends ManualOperation {
    constructor(config) {
        super(config);
    }
    async makeRequest(variables, signal = new AbortController().signal) {
        try {
            return await this.config.request(...[signal, variables]);
        }
        catch (error) {
            throw this.config.transformError(error);
        }
    }
    mutate(...args) {
        const variables = args[0] instanceof AbortSignal ? undefined : args[0];
        const signal = args[0] instanceof AbortSignal ? args[0] : args[1];
        return this.makeRequest(variables, signal);
    }
    useMutation(options) {
        const result = useMutation({
            ...options,
            mutationFn: (variables) => this.makeRequest(variables, options?.signal),
        }, queryClient);
        return [result.mutateAsync, result.isPending, result.error, result];
    }
}
//# sourceMappingURL=ManualMutation.js.map