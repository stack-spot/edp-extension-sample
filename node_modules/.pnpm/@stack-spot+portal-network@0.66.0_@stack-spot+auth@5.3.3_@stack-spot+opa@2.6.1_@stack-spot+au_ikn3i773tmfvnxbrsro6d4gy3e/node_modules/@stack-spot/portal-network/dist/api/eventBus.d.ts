/**
 * EventBusApi
 * 0.2.7
 * DO NOT MODIFY - This file has been generated using oazapfts.
 * See https://www.npmjs.com/package/oazapfts
 */
import * as Oazapfts from "@oazapfts/runtime";
export declare const defaults: Oazapfts.Defaults<Oazapfts.CustomHeaders>;
export declare const servers: {
    generatedServerUrl: string;
};
export type Event = {
    /** Mandatory, defined by the client application */
    id: string;
    /** Mandatory, '/{workspaceSlug}/{app_name}' */
    source: string;
    /** Mandatory, fixed to '1.0' */
    specversion: string;
    /** Mandatory, UTC ISO 8601 ('YYYY-MM-DDTHH:MM:SSZ'), defined by client application */
    time: string;
    /** Mandatory, 'workspace_slug.event_name' */
    "type": string;
    /** Mandatory, application-specific event data */
    data: {
        [key: string]: object;
    };
};
export type SendEventsRequest = {
    /** List of events */
    events: Event[];
};
export type EventResult = object;
export type Error = EventResult & {
    eventId?: string;
    errorCode?: string;
    errorMessage?: string;
};
export type Success = EventResult & {
    eventId?: string;
    partition?: number;
    offset?: number;
    timestamp?: number;
};
export type EventProcessingResponse = {
    errorCount: number;
    results: (Error | Success)[];
};
export type StatusType = number;
export type SendEncryptedEventsRequest = {
    /** Base64 encoded + encrypted Events */
    data: string;
    /** Base64 encoded + encrypted random Symmetric Key */
    sessionKey: string;
};
export declare function sendEvents({ stackspotCustomerIp, sendEventsRequest }: {
    stackspotCustomerIp?: string;
    sendEventsRequest: SendEventsRequest;
}, opts?: Oazapfts.RequestOpts): Promise<EventProcessingResponse>;
export declare function sendEncryptedEvents({ stackspotCustomerIp, sendEncryptedEventsRequest }: {
    stackspotCustomerIp?: string;
    sendEncryptedEventsRequest: SendEncryptedEventsRequest;
}, opts?: Oazapfts.RequestOpts): Promise<EventProcessingResponse>;
export declare function getPublicKey(opts?: Oazapfts.RequestOpts): Promise<string>;
//# sourceMappingURL=eventBus.d.ts.map