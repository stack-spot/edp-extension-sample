/**
 * Insights API
 * v1.0.0
 * DO NOT MODIFY - This file has been generated using oazapfts.
 * See https://www.npmjs.com/package/oazapfts
 */
import * as Oazapfts from "@oazapfts/runtime";
export declare const defaults: Oazapfts.Defaults<Oazapfts.CustomHeaders>;
export declare const servers: {
    generatedServerUrl: string;
};
export type NewPanelRequest = {
    panelType: string;
};
export type IdResponse = {
    /** Id response. */
    id?: number;
};
export type ValidationDetails = {
    code: string;
    field?: string;
    details?: string;
    values?: string[];
};
export type ErrorResponse = {
    code: string;
    status: number;
    details: string;
    validationDetails?: ValidationDetails[];
};
export type AddPanelToDashboardRequest = {
    panel: string;
};
export type NewDatasetRequest = {
    name: string;
    description?: string;
    scope: string;
    query: string;
    panelId: number;
};
export type Panel = {
    /** Panel id. */
    id?: number;
    /** The name of the dataset used to generate this panel. */
    datasetName?: string;
    /** The type of the panel. */
    panelType?: string;
    /** Order to display this panel. */
    order?: number;
    /** Data for this panel. */
    data?: {
        [key: string]: object;
    }[];
};
export type DashboardReadResponse = {
    /** Panels in a dashboard. */
    panels?: Panel[];
};
/**
 * Create Panel
 */
export declare function save({ newPanelRequest }: {
    newPanelRequest: NewPanelRequest;
}, opts?: Oazapfts.RequestOpts): Promise<IdResponse>;
/**
 * Add Panel to Dashboard Studio
 */
export declare function addToDashboardStudio({ accountSlug, studioSlug, addPanelToDashboardRequest }: {
    accountSlug: string;
    studioSlug: string;
    addPanelToDashboardRequest: AddPanelToDashboardRequest;
}, opts?: Oazapfts.RequestOpts): Promise<IdResponse>;
/**
 * Remove Panel from Dashboard Studio
 */
export declare function removeFromDashboardStudio({ accountSlug, studioSlug, panelId }: {
    accountSlug: string;
    studioSlug: string;
    panelId: number;
}, opts?: Oazapfts.RequestOpts): Promise<IdResponse>;
/**
 * Create Dataset
 */
export declare function save1({ newDatasetRequest }: {
    newDatasetRequest: NewDatasetRequest;
}, opts?: Oazapfts.RequestOpts): Promise<IdResponse>;
/**
 * Download Studio Data
 */
export declare function downloadStudioData({ accountSlug, studioSlug, startDate, endDate, stackspotCustomerIp }: {
    accountSlug: string;
    studioSlug: string;
    startDate: string;
    endDate: string;
    stackspotCustomerIp?: string;
}, opts?: Oazapfts.RequestOpts): Promise<string>;
/**
 * Download Event account data file
 */
export declare function streamingAccountData({ accountSlug, startDate, endDate, dataset }: {
    accountSlug: string;
    startDate: string;
    endDate: string;
    dataset: string;
}, opts?: Oazapfts.RequestOpts): Promise<unknown>;
/**
 * Download Account Data
 */
export declare function downloadAccountData({ accountSlug, startDate, endDate, stackspotCustomerIp }: {
    accountSlug: string;
    startDate: string;
    endDate: string;
    stackspotCustomerIp?: string;
}, opts?: Oazapfts.RequestOpts): Promise<string>;
/**
 * Get Dashboard Studio
 */
export declare function getDashboardStudio({ accountSlug, studioSlug, stackspotCustomerIp }: {
    accountSlug: string;
    studioSlug: string;
    stackspotCustomerIp?: string;
}, opts?: Oazapfts.RequestOpts): Promise<DashboardReadResponse>;
//# sourceMappingURL=insights.d.ts.map