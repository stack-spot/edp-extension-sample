/**
 * Runtime Manager API
 * v1.0.0
 * DO NOT MODIFY - This file has been generated using oazapfts.
 * See https://www.npmjs.com/package/oazapfts
 */
import * as Oazapfts from "@oazapfts/runtime";
import * as QS from "@oazapfts/runtime/query";
export const defaults = {
    headers: {},
    baseUrl: "https://runtime-manager.dev.stackspot.com",
};
const oazapfts = Oazapfts.runtime(defaults);
export const servers = {
    generatedServerUrl: "https://runtime-manager.dev.stackspot.com"
};
/**
 * Endpoint to get the necessary data to perform an IAC Task
 */
export function getIacTask({ taskId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v2/run/self-hosted/task/iac/${encodeURIComponent(taskId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to inform the completion of an IAC Task
 */
export function putIacTaskResponse({ taskId, runSelfHostedTaskIacCompletedRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v2/run/self-hosted/task/iac/${encodeURIComponent(taskId)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body: runSelfHostedTaskIacCompletedRequest
    })));
}
/**
 * Endpoint to get the necessary data to perform an Destroy Task
 */
export function getDestroyTask({ taskId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v2/run/self-hosted/task/destroy/${encodeURIComponent(taskId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to inform the completion of a Destroy Task
 */
export function putDestroyTaskResponse({ taskId, runSelfHostedTaskDestroyCompletedRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v2/run/self-hosted/task/destroy/${encodeURIComponent(taskId)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body: runSelfHostedTaskDestroyCompletedRequest
    })));
}
/**
 * Endpoint to get the necessary data to perform a Deploy Task
 */
export function getDeployTask({ taskId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v2/run/self-hosted/task/deploy/${encodeURIComponent(taskId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to inform the completion of a Deploy Task
 */
export function putDeployTaskResponse({ taskId, runSelfHostedTaskDeployCompletedRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v2/run/self-hosted/task/deploy/${encodeURIComponent(taskId)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body: runSelfHostedTaskDeployCompletedRequest
    })));
}
/**
 * Endpoint to get the necessary data to perform an IAC Task
 */
export function getIacTask1({ taskId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/self-hosted/task/iac/${encodeURIComponent(taskId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to inform the completion of an IAC Task
 */
export function putIacTaskResponse1({ taskId, runSelfHostedTaskIacCompletedRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/self-hosted/task/iac/${encodeURIComponent(taskId)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body: runSelfHostedTaskIacCompletedRequest
    })));
}
/**
 * Endpoint to get the necessary data to perform an Destroy Task
 */
export function getDestroyTask1({ taskId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/self-hosted/task/destroy/${encodeURIComponent(taskId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to inform the completion of a Destroy Task
 */
export function putDestroyTaskResponse1({ taskId, runSelfHostedTaskDestroyCompletedRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/self-hosted/task/destroy/${encodeURIComponent(taskId)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body: runSelfHostedTaskDestroyCompletedRequest
    })));
}
/**
 * Endpoint to get the necessary data to perform a Deploy Task
 */
export function getDeployTask1({ taskId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/self-hosted/task/deploy/${encodeURIComponent(taskId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to inform the completion of a Deploy Task
 */
export function putDeployTaskResponse1({ taskId, runSelfHostedTaskDeployCompletedRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/self-hosted/task/deploy/${encodeURIComponent(taskId)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body: runSelfHostedTaskDeployCompletedRequest
    })));
}
/**
 * Endpoint to run Infra Rollback
 */
export function runRollbackInfra({ runSelfHostedRollbackRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v2/run/self-hosted/rollback/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedRollbackRequest
    })));
}
/**
 * Endpoint to run App Rollback
 */
export function runRollbackApp({ runSelfHostedRollbackRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v2/run/self-hosted/rollback/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedRollbackRequest
    })));
}
/**
 * Endpoint to run Destroy SelfHosted
 */
export function runDestroyInfra({ runSelfHostedDestroyRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v2/run/self-hosted/destroy/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedDestroyRequest
    })));
}
/**
 * Endpoint to run Destroy SelfHosted
 */
export function runDestroyApp({ runSelfHostedDestroyRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v2/run/self-hosted/destroy/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedDestroyRequest
    })));
}
/**
 * Endpoint to run Infra Deploy
 */
export function runDeployInfra({ runSelfHostedDeployRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v2/run/self-hosted/deploy/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedDeployRequest
    })));
}
/**
 * Endpoint to run App Deploy
 */
export function runDeployApp({ runSelfHostedDeployRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v2/run/self-hosted/deploy/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedDeployRequest
    })));
}
/**
 * Endpoint to run Infra Deploy
 */
export function runDestroyInfra1({ runDestroyRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v2/run/destroy/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runDestroyRequest
    })));
}
/**
 * Endpoint to run App Deploy
 */
export function runDestroyApp1({ runDestroyRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v2/run/destroy/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runDestroyRequest
    })));
}
/**
 * Endpoint to identify the worker that got this tasks to process
 */
export function getRunTaskById({ taskId, workerUrl }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/task/${encodeURIComponent(taskId)}/worker${QS.query(QS.explode({
        workerUrl
    }))}`, {
        ...opts,
        method: "POST"
    }));
}
/**
 * Endpoint to run Infra Rollback
 */
export function runRollbackInfra1({ runSelfHostedRollbackRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/self-hosted/rollback/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedRollbackRequest
    })));
}
/**
 * Endpoint to run App Rollback
 */
export function runRollbackApp1({ runSelfHostedRollbackRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/self-hosted/rollback/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedRollbackRequest
    })));
}
/**
 * Endpoint to run Destroy SelfHosted
 */
export function runDestroyInfra2({ runSelfHostedDestroyRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/self-hosted/destroy/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedDestroyRequest
    })));
}
/**
 * Endpoint to run Destroy SelfHosted
 */
export function runDestroyApp2({ runSelfHostedDestroyRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/self-hosted/destroy/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedDestroyRequest
    })));
}
/**
 * Endpoint to run Infra Deploy
 */
export function runDeployInfra1({ runSelfHostedDeployRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/self-hosted/deploy/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedDeployRequest
    })));
}
/**
 * Endpoint to run App Deploy
 */
export function runDeployApp1({ runSelfHostedDeployRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/self-hosted/deploy/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runSelfHostedDeployRequest
    })));
}
/**
 * Endpoint to run Infra Rollback
 */
export function runRollbackInfra2({ runRollbackRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/rollback/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runRollbackRequest
    })));
}
/**
 * Endpoint to run App Rollback
 */
export function runRollbackApp2({ runRollbackRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/rollback/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runRollbackRequest
    })));
}
/**
 * Endpoint to run Destroy
 */
export function runDestroyInfra3({ runDestroyRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/destroy/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runDestroyRequest
    })));
}
/**
 * Endpoint to run Destroy
 */
export function runDestroyApp3({ runDestroyRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/destroy/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runDestroyRequest
    })));
}
/**
 * Endpoint to run Infra Deploy
 */
export function runDeployInfra2({ runDeployRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/deploy/infra", oazapfts.json({
        ...opts,
        method: "POST",
        body: runDeployRequest
    })));
}
/**
 * Endpoint to run App Deploy
 */
export function runDeployApp2({ runDeployRequest }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/run/deploy/app", oazapfts.json({
        ...opts,
        method: "POST",
        body: runDeployRequest
    })));
}
/**
 * Endpoint to cancel a run that's currently running
 */
export function cancelAppRunByRunId({ runId, force }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/cancel/${encodeURIComponent(runId)}${QS.query(QS.explode({
        force
    }))}`, {
        ...opts,
        method: "POST"
    }));
}
/**
 * Simulate a response from deploy worker
 */
export function simulateIacWorkerResponse({ finishWorkerIacSchema }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/admin/simulate/worker-response/iac", oazapfts.json({
        ...opts,
        method: "POST",
        body: finishWorkerIacSchema
    })));
}
/**
 * Endpoint to cancel a run that's currently running
 */
export function simulateIacWorkerResponseForAllTasks({ runId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/simulate/worker-response/iac/${encodeURIComponent(runId)}`, {
        ...opts,
        method: "POST"
    }));
}
/**
 * Simulate a response from deploy worker
 */
export function simulateDestroyWorkerResponse({ finishWorkerDestroySchema }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/admin/simulate/worker-response/destroy", oazapfts.json({
        ...opts,
        method: "POST",
        body: finishWorkerDestroySchema
    })));
}
/**
 * Simulate a response from deploy worker
 */
export function simulateDeployWorkerResponse({ finishWorkerDeploySchema }, opts) {
    return oazapfts.ok(oazapfts.fetchJson("/admin/simulate/worker-response/deploy", oazapfts.json({
        ...opts,
        method: "POST",
        body: finishWorkerDeploySchema
    })));
}
/**
 * Endpoint to force to resend all "ready to run" tasks by runId
 */
export function resendTasks({ runId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/run/${encodeURIComponent(runId)}/tasks/resend`, {
        ...opts,
        method: "POST"
    }));
}
/**
 * Endpoint to force status RUNTIME_ERROR to a run by runId
 */
export function setRunAsFailed({ runId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/run/${encodeURIComponent(runId)}/set-as-error`, {
        ...opts,
        method: "POST"
    }));
}
/**
 * Endpoint to block a StackSpot Workspace to perform Runtime operations
 */
export function blockWorkspace({ workspaceId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/block/workspace/${encodeURIComponent(workspaceId)}`, {
        ...opts,
        method: "POST"
    }));
}
/**
 * Endpoint to block a StackSpot Account to perform Runtime operations
 */
export function blockAccount({ accountId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/block/account/${encodeURIComponent(accountId)}`, {
        ...opts,
        method: "POST"
    }));
}
/**
 * Endpoint to get tag data
 */
export function getTagsByInfraIdAndEnvId({ infraId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/tag/infra/${encodeURIComponent(infraId)}/env/${encodeURIComponent(envId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to get tag data
 */
export function getTagsByAppIdAndEnvId({ appId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/tag/app/${encodeURIComponent(appId)}/env/${encodeURIComponent(envId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to get environment
 */
export function getAllEnvironmentConfiguration(opts) {
    return oazapfts.ok(oazapfts.fetchJson("/v1/runtime-environment", {
        ...opts
    }));
}
/**
 * Endpoint to get run data by runId
 */
export function getRunById({ runId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/${encodeURIComponent(runId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to get runs data by infraId and envId, sorted by createdAt descending
 */
export function getRunsByInfraIdAndEnvId({ size, page, infraId, envId, status }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/infra/${encodeURIComponent(infraId)}/env/${encodeURIComponent(envId)}${QS.query(QS.explode({
        size,
        page,
        status
    }))}`, {
        ...opts
    }));
}
/**
 * Endpoint to get runs data by appId and envId, sorted by createdAt descending
 */
export function getRunsByAppIdAndEnvId({ size, page, appId, envId, status }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/run/app/${encodeURIComponent(appId)}/env/${encodeURIComponent(envId)}${QS.query(QS.explode({
        size,
        page,
        status
    }))}`, {
        ...opts
    }));
}
/**
 * Endpoint to get deployment data by deploymentId
 */
export function getDeploymentById({ deploymentId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/${encodeURIComponent(deploymentId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to get deployment data by infraId and envId, sorted by creation date descending
 */
export function getDeploymentByInfraIdAndEnvId({ size, page, infraId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/infra/${encodeURIComponent(infraId)}/env/${encodeURIComponent(envId)}${QS.query(QS.explode({
        size,
        page
    }))}`, {
        ...opts
    }));
}
/**
 * Endpoint to get deployment head data by appId and envId
 */
export function getDeploymentHeadByInfraIdAndEnvId({ infraId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/infra/${encodeURIComponent(infraId)}/env/${encodeURIComponent(envId)}/head`, {
        ...opts
    }));
}
/**
 * Endpoint to get last deployment status
 */
export function getDeploymentStatus({ appId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/app/status/${encodeURIComponent(appId)}/env/${encodeURIComponent(envId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to get last deployment status
 */
export function getDeploymentStatus1({ infraId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/infra/status/${encodeURIComponent(infraId)}/env/${encodeURIComponent(envId)}`, {
        ...opts
    }));
}
export function getDiffByInfra({ infraId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/diff/env/${encodeURIComponent(envId)}/infra/${encodeURIComponent(infraId)}`, {
        ...opts
    }));
}
export function getDiffByApp({ appId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/diff/env/${encodeURIComponent(envId)}/app/${encodeURIComponent(appId)}`, {
        ...opts
    }));
}
/**
 * Endpoint to get deployment data by appId and envId, sorted by creation date descending
 */
export function getDeploymentByAppIdAndEnvId({ size, page, appId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/app/${encodeURIComponent(appId)}/env/${encodeURIComponent(envId)}${QS.query(QS.explode({
        size,
        page
    }))}`, {
        ...opts
    }));
}
/**
 * Endpoint to get deployment head data by appId and envId
 */
export function getDeploymentHeadByAppIdAndEnvId({ appId, envId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/v1/deployment/app/${encodeURIComponent(appId)}/env/${encodeURIComponent(envId)}/head`, {
        ...opts
    }));
}
/**
 * Get task with workspaceName, appId or InfraId that have status RUNNING
 */
export function getAdminRunStatusRunningDetails({ workspaceName, pageable }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/run/running/workspace/${encodeURIComponent(workspaceName)}${QS.query(QS.explode({
        pageable
    }))}`, {
        ...opts
    }));
}
/**
 * Get task with workspaceName, appId or InfraId that have status RUNNING
 */
export function getAdminRunStatusRunningDetails1({ infraId, pageable }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/run/running/infra/${encodeURIComponent(infraId)}${QS.query(QS.explode({
        pageable
    }))}`, {
        ...opts
    }));
}
/**
 * Get task with workspaceName, appId or InfraId that have status RUNNING
 */
export function getAdminRunStatusRunningDetails2({ appId, pageable }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/run/running/app/${encodeURIComponent(appId)}${QS.query(QS.explode({
        pageable
    }))}`, {
        ...opts
    }));
}
/**
 * Get task details from run task id
 */
export function getAdminRunTaskDetails({ runTaskId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/get/task/${encodeURIComponent(runTaskId)}/details`, {
        ...opts
    }));
}
/**
 * Get a run from run or run task id
 */
export function getAdminRun({ runId, runTaskId }, opts) {
    return oazapfts.ok(oazapfts.fetchJson(`/admin/get/run${QS.query(QS.explode({
        runId,
        runTaskId
    }))}`, {
        ...opts
    }));
}
//# sourceMappingURL=apiRuntime.js.map