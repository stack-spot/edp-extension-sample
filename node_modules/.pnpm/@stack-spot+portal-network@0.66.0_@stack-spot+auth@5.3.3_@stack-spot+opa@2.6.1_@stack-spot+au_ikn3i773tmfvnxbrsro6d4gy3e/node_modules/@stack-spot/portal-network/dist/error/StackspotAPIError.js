import { getLanguage } from '@stack-spot/portal-translate';
function getMessage(error) {
    const message = typeof error === 'function' ? error('en') : error;
    return typeof message === 'string' ? message : message?.description;
}
export class StackspotAPIError extends Error {
    constructor({ status, code, headers, message, stack }) {
        super(`Stackspot API error (network ${status}): ${getMessage(message)}`);
        /**
         * The response's status.
         */
        Object.defineProperty(this, "status", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The response's headers.
         */
        Object.defineProperty(this, "headers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The error code defined by the API, if any.
         */
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "intl", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.status = status;
        this.code = code;
        this.headers = headers;
        this.stack = stack;
        this.intl = typeof message === 'string' || typeof message === 'object' ? () => message : message;
    }
    /**
     * Translates the error to the given language.
     * @param language
     * @returns an error message
     */
    translate(language = getLanguage()) {
        const unknown = language === 'en' ? 'unknown error' : 'erro desconhecido';
        const error = this.intl?.(language);
        const message = typeof error === 'string' ? error : error?.description;
        return message ?? this.message ?? this.code ?? (this.status === 0 ? unknown : `${this.status}`);
    }
    translateDetails(language = getLanguage()) {
        const unknown = language === 'en' ? 'unknown error' : 'erro desconhecido';
        const errorMessage = this.intl?.(language);
        if (typeof errorMessage === 'string')
            return { description: errorMessage };
        if (typeof errorMessage === 'object')
            return errorMessage;
        return { description: this.message ?? this.code ?? (this.status === 0 ? unknown : `${this.status}`) };
    }
}
//# sourceMappingURL=StackspotAPIError.js.map