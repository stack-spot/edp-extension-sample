import { clearUserHistory, defaults, deleteUserHistoryItem, getUserHistory, search } from '../api/workspaceSearchEngine.js';
import apis from '../apis.json';
import { DefaultAPIError } from '../error/DefaultAPIError.js';
import { baseDictionary } from '../error/dictionary/base.js';
import { ReactQueryNetworkClient } from '../network/ReactQueryNetworkClient.js';
class WorkspaceSearchClient extends ReactQueryNetworkClient {
    constructor() {
        super(apis.workspaceSearchEngine.url, defaults);
        /**
         * Gets search history
         */
        Object.defineProperty(this, "searchHistory", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: this.query(getUserHistory)
        });
        /**
         * Gets search data
         */
        Object.defineProperty(this, "search", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: this.infiniteQuery(search, { accumulator: 'content', initialPageParam: 0 })
        });
        /**
         * Clears users history
         */
        Object.defineProperty(this, "clearAllUserHistory", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: this.mutation(clearUserHistory)
        });
        /**
         * Clears a specific entry in users history
         */
        Object.defineProperty(this, "clearEntryInUserHistory", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: this.mutation(deleteUserHistoryItem)
        });
    }
    buildStackSpotError(error) {
        return new DefaultAPIError(error.data, error.status, baseDictionary, error.headers);
    }
}
export const workspaceSearchClient = new WorkspaceSearchClient();
//# sourceMappingURL=workspace-search.js.map