import { HttpError } from '@oazapfts/runtime';
import { StackspotAPIError } from '../error/StackspotAPIError.js';
import { ReactQueryNetworkClient } from '../network/ReactQueryNetworkClient.js';
declare class AgentClient extends ReactQueryNetworkClient {
    constructor();
    protected buildStackSpotError(error: HttpError): StackspotAPIError;
    agents: import("../network/types.js").QueryObject<{
        visibility?: import("../api/agent.js").VisibilityLevel | undefined;
    }, import("../api/agent.js").AgentResponse[]>;
    publicAgents: import("../network/types.js").QueryObject<{
        visibility?: import("../api/agent.js").VisibilityLevel | undefined;
    }, import("../api/agent.js").AgentResponse[]>;
    agent: import("../network/types.js").QueryObject<{
        agentId: string;
    }, {
        id: string;
        name: string;
        slug: string;
        description?: string | undefined;
        avatar?: string | undefined;
        system_prompt: string;
        type: string;
        llm_config?: import("../api/agent.js").LlmConfigResponse | undefined;
        suggested_prompts?: string[] | undefined;
        knowledge_sources_config?: import("../api/agent.js").KnowledgeSourceResponse | undefined;
        visibility_level: string;
        creator_name: string;
        created_by: string;
        created_at: string;
        updated_by?: string | undefined;
        updated_at?: string | undefined;
    }>;
}
export declare const agentClient: AgentClient;
export {};
//# sourceMappingURL=agent.d.ts.map