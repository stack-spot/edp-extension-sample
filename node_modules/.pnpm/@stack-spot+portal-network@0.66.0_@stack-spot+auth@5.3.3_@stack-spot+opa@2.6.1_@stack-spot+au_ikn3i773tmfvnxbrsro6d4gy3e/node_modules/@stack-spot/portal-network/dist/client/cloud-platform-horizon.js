import apis from '../apis.json';
import { DefaultAPIError } from '../error/DefaultAPIError.js';
import { ReactQueryNetworkClient } from '../network/ReactQueryNetworkClient.js';
import { removeAuthorizationParam } from '../utils/remove-authorization-param.js';
import { apply, defaults } from '../api/cloudPlatformHorizon.js';
import { baseDictionary } from '../error/dictionary/base.js';
class CloudPlatformHorizonClient extends ReactQueryNetworkClient {
    constructor() {
        super(apis.cloudPlatformHorizon.url, defaults);
        /**
         * Apply manifesto resource
         */
        Object.defineProperty(this, "apply", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: this.mutation(removeAuthorizationParam(apply))
        });
    }
    buildStackSpotError(error) {
        return new DefaultAPIError(error.data, error.status, baseDictionary, error.headers);
    }
}
export const cloudPlatformHorizonClient = new CloudPlatformHorizonClient();
//# sourceMappingURL=cloud-platform-horizon.js.map