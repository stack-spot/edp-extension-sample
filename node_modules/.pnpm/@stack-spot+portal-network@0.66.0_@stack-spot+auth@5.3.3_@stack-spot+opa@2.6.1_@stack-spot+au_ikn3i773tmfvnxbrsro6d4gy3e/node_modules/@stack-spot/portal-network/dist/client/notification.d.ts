import { HttpError } from '@oazapfts/runtime';
import { StackspotAPIError } from '../error/StackspotAPIError.js';
import { ReactQueryNetworkClient } from '../network/ReactQueryNetworkClient.js';
declare class NotificationClient extends ReactQueryNetworkClient {
    constructor();
    protected buildStackSpotError(error: HttpError): StackspotAPIError;
    /**
     * Gets all notification by tenant
     */
    notifications: import("../network/types.js").QueryObject<{
        size?: number | undefined;
        page?: number | undefined;
        createdSince?: number | undefined;
        context?: "AI" | "ACCOUNT" | "WORKSPACE" | "STUDIO" | undefined;
        criticality?: "LOW" | "MEDIUM" | "HIGH" | undefined;
        content?: string | undefined;
        committed?: boolean | undefined;
        tenantId: string;
    }, import("../api/notification.js").PagingResponseModelGetTenantNotificationsResponse>;
    /**
     * Gets all committed notifications by tenant
     */
    committedNotifications: import("../network/types.js").QueryObject<{
        tenantId: string;
    }, import("../api/notification.js").GetCommittedNotificationsResponse>;
    /**
     * Mark a notification as committed (mark as read)
     */
    commit: import("../network/types.js").MutationObject<{
        notificationId: string;
        tenantId: string;
    }, unknown>;
}
export declare const notificationClient: NotificationClient;
export {};
//# sourceMappingURL=notification.d.ts.map