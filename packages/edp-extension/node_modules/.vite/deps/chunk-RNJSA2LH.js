import {
  require_react
} from "./chunk-HL4WHFNK.js";
import {
  __toESM
} from "./chunk-3O7X656O.js";

// ../../node_modules/.pnpm/@stack-spot+portal-translate@1.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@stack-spot/portal-translate/dist/language.js
var import_react = __toESM(require_react(), 1);
var SUPPORTED = ["pt", "en"];
var KEY = "language";
var listeners = [];
function getLanguage() {
  const language = getLanguageFromCookie();
  if (SUPPORTED.includes(language))
    return language;
  const navigatorLanguage = navigator.language.split("-")[0];
  if (SUPPORTED.includes(navigatorLanguage))
    return navigatorLanguage;
  return "en";
}
function setLanguage(language, setCookie = true, domain = ".stackspot.com") {
  if (setCookie)
    document.cookie = `${KEY}=${language};path=/${location.host.endsWith(domain) ? `;domain=${domain}` : ""}`;
  listeners.forEach((l) => l(language));
}
function getLanguageFromCookie() {
  return (document.cookie.match(new RegExp(`${KEY}=([^;]+)`)) ?? [])[1];
}
function onLanguageChange(listener) {
  listeners.push(listener);
  return () => {
    const index = listeners.indexOf(listener);
    if (index !== -1)
      listeners.splice(index, 1);
  };
}
function translate(dictionary, language = getLanguage()) {
  return dictionary[language];
}
function useTranslate(dictionary) {
  const language = useLanguage();
  return translate(dictionary, language);
}
function useLanguage() {
  const [language, setLanguage2] = (0, import_react.useState)(getLanguage());
  (0, import_react.useEffect)(() => onLanguageChange(setLanguage2), []);
  return language;
}

export {
  setLanguage,
  useTranslate
};
//# sourceMappingURL=chunk-RNJSA2LH.js.map
