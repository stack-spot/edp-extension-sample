import {
  Forbidden,
  Logo,
  NotFound,
  ServerError,
  Unauthenticated
} from "./chunk-HKZGJQDN.js";
import {
  useTranslate
} from "./chunk-RNJSA2LH.js";
import {
  listToClass,
  theme
} from "./chunk-XXGSNWZJ.js";
import {
  Button_default,
  LinkBox_default,
  Text_default
} from "./chunk-WUO3U7VK.js";
import {
  pt
} from "./chunk-WRWZMEG7.js";
import {
  require_jsx_runtime
} from "./chunk-3U5MBTNC.js";
import {
  require_react
} from "./chunk-HL4WHFNK.js";
import {
  __toESM
} from "./chunk-3O7X656O.js";

// ../../node_modules/.pnpm/@stack-spot+portal-components@2.11.0_@citric+core@6.4.0_lodash@4.17.21_react@18.3.1_styled-co_znquakb2rsxqt5xzqupds5baa4/node_modules/@stack-spot/portal-components/dist/components/error/ErrorFeedback.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react = __toESM(require_react(), 1);
var imageStyle = {
  width: "200px",
  height: "200px"
};
var imageMap = {
  401: (0, import_jsx_runtime.jsx)(Unauthenticated, { style: imageStyle }),
  403: (0, import_jsx_runtime.jsx)(Forbidden, { style: imageStyle }),
  404: (0, import_jsx_runtime.jsx)(NotFound, { style: imageStyle })
};
var FeedbackBox = pt.div`
  background-color: ${theme.color.light[400]};
  padding: 24px;
  .content {
    display: flex;
    justify-content: center;
    align-items: center;
    &.row {
      flex-direction: row;
      gap: 40px;
    }
    &.column {
      flex-direction: column;
      .text-content {
        align-items: center;
      }
    }
    .text-content {
      display: flex;
      flex-direction: column;
      gap: 12px;
    }
    .buttons {
      display: flex;
      flex-direction: row;
      gap: '10px';
    }
    .details {
      background-color: ${theme.color.danger[500]};
      color: ${theme.color.danger.contrastText};
      padding: 12px;
      border-radius: 5px;
    }
  }
`;
var ErrorFeedback = ({ code = 0, message, debug, title, body, image, action, description, help, direction = "row", style, className }) => {
  const t = useTranslate(dictionary);
  const [showDetails, setShowDetails] = (0, import_react.useState)(false);
  const shouldShowButtons = !!(action || debug && message);
  function renderBody() {
    return typeof body === "string" ? (0, import_jsx_runtime.jsx)(Text_default, { appearance: "body1", colorScheme: "inverse", className: "description", children: body }) : body;
  }
  return (0, import_jsx_runtime.jsx)(FeedbackBox, { style, className, children: (0, import_jsx_runtime.jsxs)("div", { className: listToClass(["content", direction]), children: [(0, import_jsx_runtime.jsx)("div", { className: "image", children: image ?? imageMap[code] ?? (0, import_jsx_runtime.jsx)(ServerError, { style: imageStyle }) }), (0, import_jsx_runtime.jsxs)("div", { className: "text-content", children: [(0, import_jsx_runtime.jsx)(LinkBox_default, { href: "/", className: "logo", children: (0, import_jsx_runtime.jsx)(Logo, { style: { width: "130px", height: "30px" } }) }), (0, import_jsx_runtime.jsxs)(Text_default, { appearance: "h4", mt: 5, colorScheme: "inverse", className: "title", children: [code && !title ? `${code}. ` : "", (0, import_jsx_runtime.jsx)(Text_default, { appearance: "h4", as: "span", colorScheme: "light.700", children: title ?? t[`${code}.title`] })] }), body ? renderBody() : (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(Text_default, { appearance: "body1", mt: 5, colorScheme: "inverse", className: "description", children: description ?? t[`${code}.description`] }), (0, import_jsx_runtime.jsx)(Text_default, { appearance: "body1", colorScheme: "light.700", className: "help", children: help ?? t[`${code}.help`] })] }), shouldShowButtons && (0, import_jsx_runtime.jsxs)("div", { className: "buttons", children: [action && (0, import_jsx_runtime.jsx)(Button_default, { colorScheme: "inverse", onClick: action.onClick, children: action.label }), debug && message && (0, import_jsx_runtime.jsx)(Button_default, { appearance: "outlined", colorScheme: "inverse", onClick: () => setShowDetails((v) => !v), children: showDetails ? t.hideDetails : t.showDetails })] }), showDetails && (0, import_jsx_runtime.jsx)("div", { className: "details", children: (0, import_jsx_runtime.jsx)(Text_default, { appearance: "microtext1", children: message }) })] })] }) });
};
var dictionary = {
  en: {
    altLogo: "Logo Stackspot",
    "0.title": "Unknown client error",
    "0.description": "An unknown error happened while trying to load the resource.",
    "0.help": "Reload the page and, if it still doesn't work, report the error the Stackspot team.",
    "401.title": "Not authorized",
    "401.description": "There was a failure loading credentials for this page.",
    "401.help": "Check if the URL is correct or clear your cache and cookies from your browser and try again.",
    "403.title": "Private access",
    "403.description": "The page you have tried to visit is private.",
    "403.help": "Log in with another account or request access from the person who manages your organization.",
    "404.title": "Resource not found",
    "404.description": "This resource no longer exists.",
    "404.help": "Please try again or request a new URL from the person who manages your organization.",
    "500.title": "Server error",
    "500.description": "We have identified a problem with the server, but don't worry. We are already investigating what happened.",
    "500.help": "Please try again after a few minutes.",
    showDetails: "Show Details",
    hideDetails: "Hide Details"
  },
  pt: {
    altLogo: "Logo Stackspot",
    "0.title": "Erro desconhecido (cliente)",
    "0.description": "Um erro desconhecido aconteceu ao carregar o recurso",
    "0.help": "Recarregue a página e, se ainda não funcionar, reporte o problema para o time da Stackspot.",
    "401.title": "Não autorizado",
    "401.description": "Houve uma falha no carregamento de credenciais dessa página.",
    "401.help": "Verifique se a URL está correta ou limpe o cache e os cookies de seu navegador e tente novamente.",
    "403.title": "Acesso privado",
    "403.description": '"A página que você tentou visualizar é particular."',
    "403.help": "Solicite acesso com o administrador da sua organização.",
    "404.title": "Recurso não encontrado",
    "404.description": "Este recurso não existe mais.",
    "404.help": "Tente novamente ou fale com o administrador da sua organização.",
    "500.title": "Erro ao exibir o recurso",
    "500.description": "Mas não se preocupe, já estamos investigando o que aconteceu.",
    "500.help": "Tente novamente após alguns minutos.",
    showDetails: "Ver Detalhes",
    hideDetails: "Esconder Detalhes"
  }
};

// ../../node_modules/.pnpm/@stack-spot+portal-components@2.11.0_@citric+core@6.4.0_lodash@4.17.21_react@18.3.1_styled-co_znquakb2rsxqt5xzqupds5baa4/node_modules/@stack-spot/portal-components/dist/components/error/NotFound.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var PageNotFound = ({ goHome }) => {
  const t = useTranslate(dictionary2);
  return (0, import_jsx_runtime2.jsx)(ErrorFeedback, { code: 404, action: goHome ? {
    label: t.homePage,
    onClick: goHome
  } : void 0 });
};
var dictionary2 = {
  en: {
    homePage: "Home Page"
  },
  pt: {
    homePage: "Página Inicial"
  }
};

// ../../node_modules/.pnpm/@stack-spot+portal-components@2.11.0_@citric+core@6.4.0_lodash@4.17.21_react@18.3.1_styled-co_znquakb2rsxqt5xzqupds5baa4/node_modules/@stack-spot/portal-components/dist/components/error/UnderMaintenance.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var UnderMaintenance = ({ refresh }) => {
  const t = useTranslate(dictionary3);
  return (0, import_jsx_runtime3.jsx)(ErrorFeedback, { title: t.underMaintenance, description: t.underMaintenanceDescription, help: t.underMaintenanceHelp, action: refresh ? {
    label: t.refresh,
    onClick: refresh
  } : void 0 });
};
var dictionary3 = {
  en: {
    underMaintenance: "Under maintenance",
    underMaintenanceDescription: "The site is currently undergoing maintenance.",
    underMaintenanceHelp: "Please, try again in a few minutes.",
    refresh: "Refresh page"
  },
  pt: {
    underMaintenance: "Em manutenção",
    underMaintenanceDescription: "O site está em manutenção.",
    underMaintenanceHelp: "Por favor, tente novamente em alguns minutos.",
    refresh: "Atualizar página"
  }
};
export {
  ErrorFeedback,
  PageNotFound,
  UnderMaintenance
};
//# sourceMappingURL=@stack-spot_portal-components_error.js.map
