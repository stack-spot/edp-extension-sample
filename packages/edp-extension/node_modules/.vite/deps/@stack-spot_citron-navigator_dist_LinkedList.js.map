{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/@stack-spot+citron-navigator@1.7.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@stack-spot/citron-navigator/src/LinkedList.ts"],
  "sourcesContent": ["type Comparator<T> = (a: T, b: T) => number\n\ninterface Item<T> {\n  value: T,\n  next?: Item<T>,\n}\n\ninterface RootItem<T> {\n  value: typeof empty,\n  next?: Item<T>,\n}\n\nconst empty = Symbol('empty')\n\n/**\n * A Linked List ordered according to the comparator passed to the constructor.\n */\nexport class LinkedList<T = any> {\n  private root: RootItem<T> = { value: empty }\n  private compare: Comparator<T>\n\n  constructor(compare: Comparator<T>) {\n    this.compare = compare\n  }\n\n  /**\n   * Adds a new element to the linked list.\n   * \n   * This performs an ordered insertion, costing O(n) in the worst case.\n   * @param element the element to add\n   */\n  push(element: T): void {\n    let prev: Item<T> | undefined = this.root as Item<T>\n\n    while (prev) {\n      if (!prev.next) {\n        prev.next = { value: element }\n        return\n      }\n      const comparison = this.compare(element, prev.next.value)\n      if (comparison <= 0) {\n        const newItem = { value: element, next: prev.next }\n        prev.next = newItem\n        return\n      }\n      prev = prev.next\n    }\n  }\n\n  /**\n   * Finds the first element where the predicate returns true.\n   * \n   * Remember that this data structure is ordered and the element returned will depend on the comparison function passed to the constructor.\n   * @param predicate the function that looks for an element.\n   * @returns the element found or undefined if no element meets the predicate.\n   */\n  find(predicate: (element: T) => boolean): T | undefined {\n    let current = this.root.next\n    while (current && !predicate(current.value)) current = current.next\n    return current?.value\n  }\n}\n"],
  "mappings": ";;;AAYA,IAAM,QAAQ,OAAO,OAAO;AAKtB,IAAO,aAAP,MAAiB;EAIrB,YAAY,SAAsB;AAH1B,WAAA,eAAA,MAAA,QAAA;;;;aAAoB,EAAE,OAAO,MAAK;;AAClC,WAAA,eAAA,MAAA,WAAA;;;;;;AAGN,SAAK,UAAU;EACjB;;;;;;;EAQA,KAAK,SAAU;AACb,QAAI,OAA4B,KAAK;AAErC,WAAO,MAAM;AACX,UAAI,CAAC,KAAK,MAAM;AACd,aAAK,OAAO,EAAE,OAAO,QAAO;AAC5B;MACF;AACA,YAAM,aAAa,KAAK,QAAQ,SAAS,KAAK,KAAK,KAAK;AACxD,UAAI,cAAc,GAAG;AACnB,cAAM,UAAU,EAAE,OAAO,SAAS,MAAM,KAAK,KAAI;AACjD,aAAK,OAAO;AACZ;MACF;AACA,aAAO,KAAK;IACd;EACF;;;;;;;;EASA,KAAK,WAAkC;AACrC,QAAI,UAAU,KAAK,KAAK;AACxB,WAAO,WAAW,CAAC,UAAU,QAAQ,KAAK;AAAG,gBAAU,QAAQ;AAC/D,WAAO,mCAAS;EAClB;;",
  "names": []
}
